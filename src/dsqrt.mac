TITLE DSQRT  V.022    PDP-10 DOUBLE PRECISION SQUARE ROOT
SUBTTL	31-DECEMBER-1969	/KK

;FROM V.020	5 MAY, 1969	/TWE
;FROM V.005 2-MAR-67
;DOUBLE PRECISION SQUARE ROOT FUNCTION
;THIS ROUTINE CALCULATES THE SQUARE ROOT OF A DOUBLE PRECISION
;ARGUMENT BY DOING A LINEAR SINGLE PRECISION APPROXIMATION ON
;THE HIGH ORDER WORD, THEN TWO DOUBLE PRECISION ITERATIONS OF
;NEWTONS METHOD. THIS SHOULD GENERATE A RESULT ACCURATE TO
;20 DECIMAL SIGNIFICANT DIGITS. THE ALGORITHM IS AS FOLLOWS

;X = (2**(2N))*F, WHERE 1/2 < F < 1
;HENCE SQRT(X) = 2**N * SQRT(F)
;THE LINEAR APPROXIMATION IS OF THE FORM
;SQRT(F) = A2 - B2/(C2+F-D2/(E2+F))
;WHERE THE CONSTANTS A2,B2,C2,D2, AND E2 HAVE THE FOLLOWING
;VALUES

;CONSTANT	VALUE WHEN 0.25<F<0.50	VALUE WHEN 0.50<F<1.0
;A2		(5/14)*SQRT(70)		(5/7)*SQRT(35)
;B2		(50/49)*SQRT(70)	(200/49)*SQRT(35)
;C2		47/14			47/7
;D2		4/49			16/49
;E2		3/14			3/7


	A=	0
	B=	1
	C=	2
	D=	3
	E=	4
	F=	5
	Q=	16
	P=	17
	X=	F		;HIGHEST AC SAVED

ENTRY DSQRT


	SIXBIT /DSQRT/		;TEXT FOR ERROR MESSAGES
DSQRT:	0			;ENTRY TO DSQRT ROUTINE
	MOVE	0, XBLT		;SET UP BLT POINTER
	BLT	0, ACSAVE+X-C	;SAVE SOME ACCUMULATORS
	MOVEI	B, @(Q)		;GET ADDRESS OF ARGUMENT
	MOVE	A, (B)		;GET HIGH ORDER PART OF ARGUMENT
	MOVE	B, 1(B)		;GET LOW ORDER PART OF ARG
	JUMPE	A, DSQRT4	;ARGUMENT OF ZERO?
	SKIPGE	A		;IS ARGUMENT POSITIVE?
	DFN	A, B		;NO, CALCULATE ABSOLUTE VALUE
	MOVE	F, A		;GET SPARE COPY OF HIGH ORDER
	LSH	F, -33		;GET RID OF FRACTION BITS
	SUBI	F, 201		;GET RID OF THE BASE 200 PART OF
				;EXPONENT. EXTRA 1 IS A FUDGE.
	ROT	F, -1		;CUT EXPONENT IN HALF, SAVE EXTRA
				;BIT FOR LATER USE AS INDEX REG.
	HRRM	F, DSQRT1	;SAVE REDUCED EXPONENT FOR SCALING
	LSH	F, -43		;BRING BIT BACK - IF 0, THEN
				;1/4<F<1/2,OTHERWISE 1/2<F<1.
	TLZ	A, 777000	;WIPE OUT EXPONENT BITS IN ARG.
	FSC	A, 177(F)	;RESET IT TO EITHER 177 OR 200
	TLZ	B,777000	;WIPE OUT EXP BITS IN LOW ARG
	FSC	B,177-^D27(F)	;SET IT TO 27 LESS THAN HI PART
	FADL	A,B		;UNNORMALIZE LOW PART
	MOVE	D, A		;PICK UP ANOTHER COPY OF NEW FRAC.
	FADR	D, E2(F)	;FORM E2+F
	MOVN	C, D2(F)	;PICK UP -D2
	FDVR	C, D		;CALCULATE -D2/(E2+F)
	FADR	C, C2(F)	;GET C2-D2/(E2+F)
	FADR	C, A		;CALCULATE F+C2-D2/(E2+F)
	MOVN	D, B2(F)	;PICK UP -B2
	FDVR	D, C		;GET -B2/(F+C2-D2/(E2+F))
	FADR	D, A2(F)	;GET FINAL FIRST APPROXIMATION
	MOVEI	E,0		;LOW HALF OF 1ST APPROX. IS 0
	MOVEM	A,N		;SAVE DSQRT ARGUMENT
	MOVEM	B,N+1		;...
				;GET N/X0
FLDIV 0,D
				;X0+N/X0
FLADD 0,D

	FSC	A,-1		;X1=.5*(X0+N/X0)
	FSC	B,-1		;...
	FADL	A,B		;UNNORMALIZE LOW WORD
	EXCH	A,N		;GET N INTO AC, STORE X1 IN MEM
	EXCH	B,N+1		;...
				;N/X1
FLDIV 0,N
				;X1+N/X1
FLADD 0,N

DSQRT1:	FSC	A,.-.		;SCALE RESULTS FOR ANSWER 
	FSC	B,@DSQRT1	;...
	FADL	A,B		;UNNORMALIZE ANSWER
DSQRT3:	MOVS	X, XBLT		;SET UP THE BLT POINTER
	BLT	X, X		;RESTORE THE ACCUMULATORS
DSQRT4:	JRA	Q, 1(Q)		;EXIT


A2:	202576362203		;2.98807152
	203416346045		;4.225771271
B2:	204421143713		;8.537347194
	205602266310		;24.14726441
C2:	202655555556		;3.357142857
	203655555556		;6.7142857143
D2:	175516274052		;0.0816326531
	177516274052		;0.326530612
E2:	176666666667		;0.2142857143
	177666666667		;0.4285714286

XBLT:	XWD	C,ACSAVE
ACSAVE:	BLOCK	X-C+1
N:	BLOCK 2		;STORAGE FOR ARGUMENT

END

