TITLE DSIN  V.027L     PDP-10 DOUBLE PRECISION SINE, COSINE
SUBTTL	1-OCT-1970	/KK/TWE

;FROM V.022	12-JAN-70	/KK
;FROM	V.020	27 APRIL, 1969	/TWE
;FROM V.005, 10-MAR-67
;DOUBLE PRECISION SINE AND COSINE FUNCTION
;THIS PROGRAM CALCULATES THE SINE AND COSINE OF A DOUBLE
;PRECISION ARGUMENT.  FOR A DESCRIPTION OF THE ALGORITHM,
;SEE THE SCIENCE LIBRARY AND FORTRAN UTILITY SUBPROGRAMS
;MANUAL.

;THE CALLING SEQUENCE FOR THE PROGRAM IS AS FOLLOWS:
;	JSA	Q, DSIN
;	EXP	ARG
;WHERE ARG IS THE ADDRESS OF THE HIGH ORDER PORTION OF THE
;ARGUMENT. THE DOUBLE PRECISION ANSWER IS LEFT IN ACCUMULATORS
;A AND B.

	ENTRY	DSIN, DCOS
	A=	0
	B=	1
	C=	2
	D=	3
	E=	4
	F=	5
	G=	6
	Q=	16
	P=	17

	X=G	;SAVE AC'S C THRU G
	SIXBIT /DCOS/
DCOS:	0			;ENTRY TO COSINE ROUTINE
	MOVE	0,XBLT
	BLT	0,ACSAVE+X-C	;SAVE ACCUMULATORS
	MOVEI	B, @(Q)		;GET ADDRESS OF ARGUMENT
	MOVE	A, (B)		;GET HIGH ORDER ARGUMENT
	MOVE	B, 1(B)		;GET LOW ORDER ARGUMENT
	FLADD	A,PIOT		;COS(X)=SIN(PI/2+X), LEAVE RESULT IN A
	JRST	DSIN0		;ENTER SINE ROUTINE

	SIXBIT /DSIN/
DSIN:	0			;ENTRY TO SINE ROUTINE
	MOVE	0,XBLT
	BLT	0,ACSAVE+X-C	;SAVE ACCUMULATORS
	MOVEI	B, @(Q)		;GET ADDRESS OF ARGUMENT
	MOVE	A, (B)		;GET HIGH ORDER ARGUMENT
	MOVE	B, 1(B)		;GET LOW ORDER ARGUMENT
DSIN0:	JUMPE	A, DSIN4C	;ARGUMENT OF ZERO?
	SETZB	G, FLAG		;SET FLAG FOR POSITIVE ARGUMENT
	JUMPGE	A, DSIN1	;IS ARGUMENT POSITIVE?
	SETOM	FLAG		;NO, CHANGE FLAG
	DFN	A, B		;NEGATE THE ARGUMENT
DSIN1:	DMOVEM	A,ARGSAV
			;CALCULATE X/(PI/2),LEAVE THE RESULTS IN A,A+1
	FLDIV	A,PIOT
	CAML	A,[1.0]		;IS X .L. PI/4?
	JRST	REDUCE		;NO, REDUCE IT
	CAML	A,[0.5]		;IS X .GE. PI/4
	MOVEI	G,1		;YES, 2ND OCTANT
DSIN1A:	DMOVE	A,ARGSAV
DSIN2:	TRNE	G,4		;QUADRANTS 3 OR 4?
	SETCMM	FLAG		;YES, SINE IS NEGATIVE
	JUMPE	G,DSIN3		;IS X .L. PI/4
	TRNE	G,1		;NO,GET INDEX INTO QUADRANT TABLE
	ADDI	G,1		;...
				;MAKE: -PI/4 .GE. X .LE. +PI/4
	FLADD	A,ADDTBL-2(G)
	SKIPGE	A
	DFN	A,B		;TAKE ABSOLUTE VALUE
	DMOVEM	A,ARGSAV
DSIN3:	TRZ	G,777775	;LEAVE ONLY OCTANT BIT
	HRRZM	G,COSFLG	;0 FOR SINE SERIES, 2 FOR COSINE
	CAMG	A,[XWD 147471,421605]	;IS X .L. SQRT(6)*2**-27?
	JRST	SMALL		;YES, THEN SIN(X)=X
				;CALCULATE X**2, AND LEAVE IN A,A+1
	FLMUL	A,ARGSAV

				;INITIALIZE PARTIAL SUM
	DMOVE	D,C17(G)
	MOVEI	G,C15(G)	;TURN OCTANT POINTER INTO TABLE ADR

DSIN3C:				;MULTIPLY PARTIAL SUM BY X**2
	FLMUL	D,A
				;ADD NEXT CONSTANT TO PARTIAL SUM
	FLADD	D,0(G)
	ADDI	G,4		;MOVE POINTER TO NEXT CONSTANT
	CAIG	G,C2		;DONE?
	JRST	DSIN3C		;NO, LOOP BACK FOR MORE OF SERIES
				;YES, ONE MORE MULTIPLY
	FLMUL	A,D
				;ADD 1.0 INTO SUM
	FLADD	A,ONE

	SKIPE	COSFLG	;IS THIS COSINE SERIES?
	JRST	DSIN4A		;YES
				;NO, MULTIPLY BY X, THIS IS SIN
	FLMUL	A,ARGSAV
DSIN4A:	SKIPE	FLAG		;NEGATE RESULT?
	DFN	A,B		;YES
DSIN4C:	MOVS	X,XBLT		;SET UP BLT POINTER
	BLT	X,X		;RESTORE AC'S
	JRA	Q,1(Q)		;EXIT

SMALL:	JUMPE	G,DSIN4A	;CALCULATING COSINE?
	DMOVE	A,ONE		;YES, COS(X)=1.0
	JRST	DSIN4A

REDUCE:	MOVE	D,A		;SAVE QUADRANT NUMBER
	LDB	G,[POINT 8,A,8]	;GET EXPONENT
	LSH	B,9		;WIPE OUT LO EXPONENT
	TLZ	A,777000	;DITTO HI EXPONENT
	LSHC	A,-202(G)	;MAKE ARGUMENT MODULO 2 PI
	LDB	G,[POINT 3,A,11]	;GET QUADRANT AND OCTANT BITS
	CAMGE	D,[4.0]		;IS NON-REDUCED ARG OK?
	JRST	DSIN1A		;YES, SAVE THE DFMP INACCURICIES
	TLZ	A,777000	;MAKE WAY FOR EXPONENT
	FSC	A,202		;PUT EXP IN HI WORD
	LSH	B,-9		;MAKE WAY FOR LOW EXPONENT
	FSC	B,202-^D27	;PUT IN LO EXPONENT
	FADL	A,B		;UNNORMALIZE LO WORD
	FLMUL	A,PIOT		;CHANGE MAKE TO RADIANS (MOD 2 PI)
	DMOVEM	A,ARGSAV
	JRST	DSIN2		;GO CHANGE ARGUMENT TO 1ST OCTANT

C17:	120625130734	;1/17!=.28114572543455207632E-14
	065030255225
	124656376371	;1/16!=.47794773323873852974E-13
	071631670076
C15:	647121401406	;-1/15!=-.76471637318198164759E-12
	075146107702
	643154321325	;-1/14! =-.11470745597729724714E-10
	101637603306
C13:	140541110604	;1/13!=.16059043836821614599E-9
	105724155023
	144436733073	;1/12!=.20876756987868098979E-8
	111774330457
C11:	630121467246	;-1/11!=-.25052108385441718775E-7
	114005273071
	624330066022	;-1/10!=-.27557319223985890653E-6
	120103540507
C9:	156561674351	;1/9!=.27557319223985890653E-5
	123253307147
	161640064006	;1/8!=.24801587301587301587E-4
	126400640064
C7:	613137713771	;-1/7!=-.19841269841269841270E-3
	131377137714
	610223722372	;-1/6!=-.1388888888888888889E-2
	134237223722
C5:	172421042104	;1/5!=.00833333333333333333333
	137210421042
	174525252525	;1/4!=.041666666666666666667
	141252525253
C3:	601252525252	;-1/3!=-0.16666666666666666667
	143525252525
C2:	577400000000	;-1/2!=-0.50000000000000000000
	000000000000


ADDTBL:	OCT 576155700452,146735722717	;-PI/2
	OCT 575155700452,147735722717	;-PI
	OCT 574322320340,150146336134	;-3*PI/2
	OCT 574155700452,150735722717	;-2*PI

ONE:	1.0
	0
XBLT:	XWD C, ACSAVE

PIOT:	201622077325	;PI/2
	146042055061
FLAG:	0			;NEGATE ANSWER IF (FLAG) IS MINUS
COSFLG:	BLOCK 1			;2 FOR COSINE SERIES, 0 FOR SINE
ACSAVE:	BLOCK X-C+1		;SAVE ROOM FOR STORING AC'S
ARGSAV:	BLOCK 2			;TEMP FOR X

LIT
END

