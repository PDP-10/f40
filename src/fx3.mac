	SUBTTL  FX3 V.25	20-JAN-72

	;UPDATE IF COMPILER IS CHANGED
;COPYRIGHT 1971,1972 DIGITAL EQUIPEMENT CORP., MAYNARD, MASS.

QTTBL:
	PHASE	0

	DEFINE	QT	(A)	<
	SIXBIT	\A]\
>

SUBQT:
	QT	SUBROUTINE
FUNQT:
	QT	FUNCTION
MENQT:
	QT	MENSION
OTOQT:
	QT	OTO
FORQT:
	QT	FORMAT
CALQT:
	QT	CALL
CONQT:
	QT	CONTINUE
TYPQT:
	QT	TYPE
ACCQT:
	QT	ACCEPT
ASSQT:
	QT	ASSIGN
TOQT:
	QT	TO
COMQT:
	QT	COMMON
EQUQT:
	QT	EQUIVALENCE
EXTQT:
	QT	EXTERNAL
RETQT:
	QT	RETURN
PAUQT:
	QT	PAUSE
STOQT:
	QT	STOP
REWQT:
	QT	REWIND
BACQT:
	QT	BACKSPACE
ENDQT:
	QT	END

IFNDEF	$DATA,
<
BLOQT:
	QT	BLOCK
ATAQT:
	QT	ATA
>
INTQT:
	QT	INTEGER
REAQT:
	QT	REAL
DPRQT:
	QT	DOUBLEPRECISION
COMPQT:
	QT	COMPLEX
LOGQT:
	QT	LOGICAL
PRIQT:
	QT	PRINT
PUNQT:
	QT	PUNCH
WRIQT:
	QT	WRITE
READQT:
	QT	READ
REREQT:
	QT	REREAD
ENCQT:
	QT	ENCODE
DECQT:
	QT	DECODE
FILQT:
	QT	FILE
UNLQT:
	QT	UNLOAD
SKIQT:
	QT	SKIP
RECQT:
	QT	RECORD
ERAQT:
	QT	ERASE
IFNDEF	$NAME,
<
NAMQT:
	QT	NAMELIST
>

IFNDEF	$IMPL,
<
IMPQT:
	QT	IMPLICIT
>
SUBSQT:
	QT	SUBSCRIPT
				;2 LINES DELETED	;"23L"
ENDEQT:				;"22Q"
	QT	<,END=>
ERREQT:				;"22Q"
	QT	<,ERR=>
;6 LINES DELETED	;"23O"
IFNDEF ERRCO,		;"23O"
<	DEFINE MSGQT (TYPE,NUMBER,MESSAGE)
<
TYPE'NUMBER'QT:	SIXBIT \TYPE-NUMBER MESSAGE]\
>
>
IFDEF ERRCO,		;"23O"
<	DEFINE MSGQT (TYPE,NUMBER,MESSAGE)
<TYPE'NUMBER'QT: SIXBIT \TYPE-NUMBER ]\	;"23O"
>
>

	MSGQT	M,1,TOO MANY SUBSCRIPTS
	MSGQT	M,2,WRONG NUMBER OF SUBSCRIPTS,	;STR795
	MSGQT	M,3,CONSTANT OVERFLOW
	MSGQT	M,4,ILLEGAL 'IF' ARGUMENT
	MSGQT	M,5,ILLEGAL CONVERSION IMPLIED
	MSGQT	M,6,LABEL OUT OF RANGE OR ARRAY TOO LARGE, ;"21E"
	MSGQT	M,7,UNTERMINATED HOLLERITH STRING
	MSGQT	M,8,SYSTEM ERROR - NO MORE SPACE FOR RECURSIVE STORAGE, ;"23J"
	MSGQT	M,9,TOO MUCH DATA - WRONG ARRAY SIZE OR LITERAL TOO LONG, ;"23K"
	MSGQT	M,10,ILLEGAL DO LOOP CLOSE
	MSGQT	M,11,MORE DATA NEEDED - LITERAL TOO SHORT OR TYPE CONVERSION EXPECTED,	;"23K"
	MSGQT	M,12,NON-INTEGER PARAMETER IN 'DO' STATEMENT
	MSGQT	M,13,NON-INTEGER SUBSCRIPT
	MSGQT	M,14,ILLEGAL COMPARISION OF COMPLEX VARIABLES
	MSGQT	M,15,TOO MANY CONTINUATION CARDS
	MSGQT	M,16,NON-INTEGER I/O UNIT OR CHARACTER COUNT
	MSGQT	M,17,SYSTEM ERROR - ROLL OUT OF RANGE
	MSGQT	M,18,SYSTEM ERROR - NO MORE ROOM FOR RECURSIVE CALLS;"23J"
	MSGQT	M,19,ILLEGAL USE OF STATEMENT LABEL ;"23-AP"
	MSGQT	M,20,ILLEGAL RECURSIVE CALL ;"23-AM"
	MSGQT	I,1,DUPLICATED DUMMY VARIABLE IN ARGUMENT STRING
	MSGQT	I,2,ARRAY NAME ALREADY IN USE
	MSGQT	I,3,ATTEMPT TO REDEFINE VARIABLE TYPE
	MSGQT	I,4,NOT A VARIABLE FORMAT ARRAY
	MSGQT	I,5,NAME ALREADY USED AS NAMELIST NAME
	MSGQT	I,6,DUPLICATED NAMELIST NAME
	MSGQT	I,7,A NAME APPEARS TWICE IN AN EXTERNAL STATEMENT
	MSGQT	I,8,ARGUMENT TYPE DOESN'T AGREE WITH FUNCTION SPEC ;"23GG"
	MSGQT	I,9,THIS FUNCTION REQIURES MORE ARGUMENTS ;"23GG"
	MSGQT	I,10,SUBPROGRAM NAME ALREADY IN USE
	MSGQT	I,11,DUMMY ARGUMENT IN DATA STATEMENT
	MSGQT	I,12,NOT A SCALAR OR ARRAY
	MSGQT	I,13,ILLEGAL USE OF DUMMY ARGUMENT
	MSGQT	I,14,ILLEGAL DO LOOP PARAMETER
	MSGQT	I,15,I/O VARIABLES MUST BE SCALARS OR ARRAYS
	MSGQT	I,16,A CONFLICT EXISTS WITH A COMMON DECLARATION;"23A"
	MSGQT	S,1,ILLEGAL NAME OR DELIMITER OR KEY CHARACTER;"23O"
	MSGQT	S,2,STATEMENT KEYWORD NOT RECOGNIZED;"23O"
	MSGQT	S,3,ILLEGAL FIELD SPECIFICATION
	MSGQT	S,4,SCALAR VARIABLE-MAY NOT BE SUBSCRIPTED
	MSGQT	S,5,ILLEGAL TYPE SPECIFICATION
	MSGQT	S,6,ARGUMENT IS NOT SINGLE LETTER
	MSGQT	S,7,'NAMELIST' NOT FOLLOWED BY "/"
	MSGQT	S,8,ILLEGAL CHARACTER IN LABEL, ;"23L"
	MSGQT	S,9,MISSING COMMA OR SLASH IN SPECIFICATION STATEMENT, ;"23M"
	MSGQT	S,10,ILLEGAL ARITHMETIC "IF" - TOO MANY LABELS,	;"23M"
	MSGQT	S,11,A NUMBER WAS EXPECTED
	MSGQT	S,12,IMPLICIT TYPE RANGE OVERLAPS PREVIOUS SPECIFICATION;"23O"
	MSGQT	S,13,ATTEMPT TO USE AN ARRAY OR FUNCTION NAME AS A SCALAR
	MSGQT	S,14,ARRAY NOT SUBSCRIPTED
	MSGQT	S,15,ILLEGAL USE OF AN ARITHMETIC FUNCTION NAME
	MSGQT	S,16,MULTIPLE RETURN ILLEGAL WITHOUT STATEMENT LABEL ARG,	;"23M"
	MSGQT	S,17,INCORRECT PAREN COUNT OR MISSING IMPLIED DO INDEX
	MSGQT	S,18,INVALID INDEX IN DO LOOP OR IMPLIED DO LOOP;"21T"
	MSGQT	S,19,EQUIVALENCE REQUIRES TWO OR MORE ELEMENTS
	MSGQT	S,20,ILLEGAL DEFINITION OF A STATEMENT FUNCTION,	;"23M"
	MSGQT	S,21,MISSING COMMA IN INPUT/OUTPUT LIST,	;"23M"
	MSGQT	S,22,STATEMENT CONTINUES PAST RECOGNIZED END POINT,	;"23M"
	MSGQT	S,23,ILLEGAL COMPLEX CONSTANT;"23O"
	MSGQT	O,1,BLOCK DATA NOT A SEPARATE PROGRAM
	MSGQT	O,2,SUBROUTINE IS NOT A SEPARATE PROGRAM
	MSGQT	O,3,STATEMENT OUT OF PLACE
	MSGQT	O,4,EXECUTABLE STATEMENTS ILLEGAL IN BLOCK DATA;"23O"
	MSGQT	A,1,MINIMUM VALUE EXCEEDS MAXIMUM VALUE
	MSGQT	A,2,ATTEMPT TO ENTER A VARIABLE INTO COMMON TWICE
	MSGQT	A,3,ATTEMPT TO EQUIVALENCE A DUMMY ARGUMENT
	MSGQT	A,4,NOT A CONSTANT OR DUMMY ARGUMENT
	MSGQT	A,5,CAUTION ** COMMON VARIABLE PASSED AS ARGUMENT

ASCQT:
	QT	<ASCII>
CRMDLD:
	QT	_***MULTIPLY DEFINED LABELS***__
GDDCRQ:
	QT	_GLOBAL DUMMIES__
COMCRQ:
	QT	_COMMON__
EQCRQT:
	QT	_EQUIVALENCE__
ALERCR:
	QT	_***ALLOCATION ERRORS***__
CRSDCR:
	QT	_SUBPROGRAMS__
SCALQT:
	QT	_SCALARS__
CONSQT:
	QT	_CONSTANTS__
ARAYQT:
	QT	_ARRAYS__
CRULDC:
	QT	_***UNDEFINED LBLS***__
				;2 LINES DELETED	;"23L"
NOQT:
	QT	.NOT.
;***********************************************************************
;DO NOT SEPARATE
OQTTBL:
EQQT:
	QT	.EQV.
XOQT:
	QT	.XOR.
ORQT:
	QT	.OR.
ANQT:
	QT	.AND.
	QT	.EQ.
NEQT:
	QT	.NE.
GTQT:
	QT	.GT.
LEQT:
	QT	.LE.
GEQT:
	QT	.GE.
LTQT:
	QT	.LT.
	QT	+
	QT	-
	QT	*
	QT	/
	QT	**
;***********************************************************************
B0QT:
	QT	<BLOCK 0>
ECOQT:
	QT	EXCESSIVE COUNT
FALQT:
	QT	FALSE.
TRUQT:
	QT	TRUE.
NOTQT:
	QT	NOT..
ODLQT:
	QT	_***OPEN DO LOOPS***__
IF.QT:
	QT	<IF(>
GOTQT:
	QT	GOTO

	DEPHASE
	DEFINE	BCD	(A)	<	SIXBIT	\A\
>

BCDTBL:
	PHASE	0

ADJ.:
	BCD	ADJ.
ALLIO.:
	BCD	ALLIO.
ALPHI.:
	BCD	ALPHI.
ALPHO.:
	BCD	ALPHO.
BINWR.:
	BCD	BINWR.
BLANKS:
	OCT	0
COMM:
	BCD	.COMM.

IFNDEF	$DATA,
<
DAT.:
	BCD	DAT.
>
DIRT.:
	BCD	DIRT.
DOUBT.:
	BCD	DOUBT.
END.:
	BCD	END.
ERR.:
	BCD	ERR.
EXIT.:
	BCD	EXIT
EXP1.0:
	BCD	EXP1.0
EXP2.0:
	BCD	EXP2.0
EXP3.0:
	BCD	EXP3.0
FLIRT.:
	BCD	FLIRT.
FLOUT.:
	BCD	FLOUT.
FORSE.:
	BCD	FORSE.
INTI.:
	BCD	INTI.
INTO.:
	BCD	INTO.
JOBFF.:
	BCD	JOBFF
LINT.:
	BCD	LINT.
LOUT.:
	BCD	LOUT.
MAIN.:
	BCD	MAIN.
MBSR.:
	BCD	MBSR.
MSPR.:
	BCD	MSPR.

IFNDEF	$NAME,
<
NMLST.:
	BCD	NMLST.
>
OCTI.:
	BCD	OCTI.
OCTO.:
	BCD	OCTO.
PAUSE.:
	BCD	PAUSE.
RANAC.:
	BCD	RANAC.
RECNO.:
	BCD	RECNO.
TFMT.:
	BCD	TFMT.
TPFCN.:
	BCD	TPFCN.
VADDR.:
	BCD	VADDR.


	DEPHASE
	DEFINE	X	(TYPE,MNE,COUNT,CLUE)
<	BYTE (6) -TYPE,MNE'ROL,-COUNT (18) CLUE
>

FILES:				;FILE GROUP TABLE
	PHASE	0		;MAKE ABSOLUTE

AREFIL:	X	0,ARE,3,ARNCLU

ARRFIL:	X	0,ARR,1,SYMBOL

CANFIL:	X	0,CAR,1,SYMBOL

CCOFIL:	X	0,CCO,2,RPACLU

CDAFIL:	X	0,CDA,1,SYMBOL

CIDFIL:	X	0,CID,1,SYMBOL

CNAFIL:	X	0,CNA,1,SYMBOL

CODFIL:	X	0,COD,1,SYMBOL

CPOFIL:	X	0,CPO,1,CPOCLU
DEFFIL:	X	0,DEF,1,SYMBOL

IFNDEF	$DATA,
<
DLCFIL:	X	0,DLC,1,DAT1
>

DPCFIL:	X	0,DPC,2,DAT1

DPIFIL:	X	0,DPI,1,SYMBOL

IFNDEF	$DATA,
<
DSVACF:	X	0,DSV,2,SYMBOL

DSVFIL:	X	0,DSV,1,SYMBOL
>

EDAFIL:	X	0,EDA,2,SYMBOL

ENEFIL:	X	0,ENE,1,SYMBOL

ESEFIL:	X	1,ERR,1,ERRBOX
	XWD	007777,777777
ETEFIL:	X	0,ETE,1,SYMBOL

FREFIL:	X	0,FRE,2,FRNCLU

GALFIL:	X	0,GAL,2,SYMBOL

GANFIL:	X	0,GAL,1,SYMBOL

GDMFIL:	X	0,GDM,1,SYMBOL

GSPFIL:	X	0,GSP,1,SYMBOL

ICOFIL:	X	0,ICO,1,DAT1

IIDFIL:	X	0,IID,1,SYMBOL

IFNDEF	$IMPL,
<
IMPFIL:	X	1,IMP,1,IMPCLU
	XWD	000000,000077
>
LBLFIL:	X	1,LBL,1,DAT2
	XWD	000000,777777

LDMFIL:	X	0,LDM,1,SYMBOL

LFUFIL:	X	0,LFU,1,SYMBOL

LIDFIL:	X	0,LID,1,SYMBOL

LSPFIL:	X	0,LSP,1,SYMBOL

IFNDEF	$NAME,
<
NITFIL:	X	0,NIT,1,SYMBOL

NNAFIL:	X	0,NNA,1,SYMBOL
>

OARFIL:	X	0,OAR,2,OARNCL

OCOFIL:	X	0,OCO,1,DAT1

RCOFIL:	X	0,RCO,2,DAT1

REGFIL:	X	1,REG,1,SYMBOL
	XWD	000000,777777

RIDFIL:	X	0,RID,1,SYMBOL

SCAFIL:	X	0,SCA,1,SYMBOL

SIIFIL:
SINFIL:	X	0,SII,1,SYMBOL

SUBFIL:	X	1,SUB,3,OPNCLU
	XWD	700000,777777
	XWD	050000,777777
	XWD	050000,777777

	DEPHASE			;BACK TO NORMAL
	P1=	0
	P3=	0
	IF1,
<
DEFINE	SETINS	(MNE,TAG,CODE)	;DEFINE OPDEFS
<	SIXBIT	/MNE/
	OPDEF	TAG	[P1_^D27]
	P1=	P1+1
>
>

	IF2,
<	P2=	^D36		;BYTE COUNTER
	RELOC	IOCTBL		;SET TO TABLE
	RELOC			;RESET

DEFINE	SETINS	(MNE,TAG,CODE)	;STORE MNEMONICS AND CODES
<	SIXBIT	/MNE/
	OPDEF	TAG	[P1_^D27]
	P1=	P1+1
	P3=	P3+CODE_<P2=P2-9>
	IFE P2,	<OUTCOD>
>
DEFINE	OUTCOD			;CODE DUMP ROUTINE
<	RELOC
	+P3
	RELOC
	P2=	^D36+<P3=0>
>
>
IBCTBL:				;INST BCD TABLE

	SETINS	ARG   ,	..,	000
	SETINS	MOVE  ,	.ME,	200
	SETINS	MOVN  ,	.MN,	210
	SETINS	ADD   ,	.ADD,	270
	SETINS	SUB   ,	.SUB,	274
	SETINS	IMUL  ,	.IMU,	220
	SETINS	IDIV  ,	.IDI,	230
	SETINS	CAMG  ,	.CMG,	317

	SETINS	CAMGE ,	.CMGE,	315
	SETINS	CAME  ,	.CME,	312
	SETINS	CAML  ,	.CML,	311
	SETINS	CAMLE ,	.CMLE,	313
	SETINS	CAMN  ,	.CMN,	316
	SETINS	HRRZ  ,	.RRZ,	550
	SETINS	TDNN  ,	.TDNN,	616
	SETINS	TDNE  ,	.TDNE,	612

	SETINS	OR    ,	.OR,	434
	SETINS	ORCA  ,	.ORA,	454
	SETINS	ORCM  ,	.ORM,	464
	SETINS	ORCB  ,	.ORB,	470
	SETINS	XOR   ,	.XOR,	430
	SETINS	EQV   ,	.EQV,	444
	SETINS	AND   ,	.AN,	404
	SETINS	ANDCA ,	.ANA,	410

	SETINS	ANDCM ,	.ANM,	420
	SETINS	ANDCB ,	.ANB,	440
MAXIMI=	.-IBCTBL-1

	SETINS	FADR  ,	.FAR,	144
	SETINS	FSBR  ,	.FSR,	154
	SETINS	FMPR  ,	.FMR,	164
MAXFIM=	.-IBCTBL
	SETINS	FDVR  ,	.FDR,	174

IFDEF HARDFL,<                                                  ; *EJG* 06/23/76
        SETINS  DMOVN , .DMVN,  121                             ; *EJG* 06/23/76
        SETINS  DFAD  , .DFA,   110                             ; *EJG* 06/23/76
        SETINS  DFSB  , .DFS,   111                             ; *EJG* 06/23/76
        SETINS  DFMP  , .DFM,   112                             ; *EJG* 06/23/76
        SETINS  DFDV  , .DFD,   113                             ; *EJG* 06/23/76
> 

	SETINS	ARG   ,	.ARG,	320
	SETINS	HLRZ  ,	.LRZ,	554
	SETINS	TLC   ,	.TLC,	641
	SETINS	TDC   ,	.TDC,	650
	SETINS	TDZA  ,	.TDZA,	634
	SETINS	DFN   ,	.DFN,	131
	SETINS	SETZ  ,	.SEZ,	400
	SETINS	SETO  ,	.SEO,	474
	SETINS	HRRM  ,	.RRM,	542
	SETINS	HRLOI ,	.RLOI,	525
	SETINS	MOVSI ,	.MSI,	205
	SETINS	BLT   ,	.BLT,	251
	SETINS	PUSH  ,	.PSH,	261
	SETINS	HRLI  ,	.RLI,	505

	SETINS	HRL   ,	.RL,	504
	SETINS	HRRO  ,	.RRO,	560
	SETINS	HRROI ,	.RROI,	561
	SETINS	SETCM ,	.SEM,	460

	SETINS	FSC   ,	.FSC,	132
	SETINS	ASH   ,	.ASH,	240
	SETINS	LSH   , .LSH,   242
	SETINS	MOVEM ,	.MEM,	202
	SETINS	MOVNM ,	.MNM,	212
	SETINS	ADDB  ,	.ADDB,	273
	SETINS	EXCH  ,	.EXCH,	250
	SETINS	JSA   ,	.JSA,	266
	SETINS	AOJA  ,	.AOJA,	344

	SETINS	SOJA  ,	.SOJA,	364
	SETINS	JUMPLE,	.JULE,	323
	SETINS	JUMPE ,	.JUE,	322
	SETINS	JSP   ,	.JSP,	265
	SETINS	PUSHJ ,	.PSHJ,	260
	SETINS	JRA   ,	.JRA,	267
	SETINS	MOVNS ,	.MNS,	213
	SETINS	POP   ,	.POP,	262
BICNUM=	.-IBCTBL

	SETINS	HRRI  ,	.RRI,	541
	SETINS	MOVEI ,	.MEI,	201
	SETINS	MOVNI ,	.MNI,	211
	SETINS	ADDI  ,	.ADDI,	271
	SETINS	SUBI  ,	.SUBI,	275
	SETINS	IMULI ,	.IMUI,	221
	SETINS	IDIVI ,	.IDII,	231
	SETINS	CAIG  ,	.CIG,	307

	SETINS	CAIGE ,	.CIGE,	305
	SETINS	CAIE  ,	.CIE,	302
	SETINS	CAIL  ,	.CIL,	301
	SETINS	CAILE ,	.CILE,	303
	SETINS	CAIN  ,	.CIN,	306
	SETINS	      ,	..,	000
	SETINS	SETCA ,	.SEA,	450
	SETINS	SETCMM,	.SEMM,	462

	SETINS	ORI   ,	.ORI,	435
	SETINS	ORCAI ,	.ORAI,	445
	SETINS	ORCMI ,	.ORMI,	465
	SETINS	ORCBI ,	.ORBI,	471
	SETINS	XORI  ,	.XORI,	431
	SETINS	EQVI  ,	.EQVI,	445
	SETINS	ANDI  ,	.ANI,	405
	SETINS	ANDCAI,	.ANAI,	411

	SETINS	ANDCMI,	.ANMI,	421
	SETINS	ANDCBI,	.ANBI,	441

	SETINS	FADRI ,	.FARI,	145
	SETINS	FSBRI ,	.FSRI,	155
	SETINS	FMPRI ,	.FMRI,	165
	SETINS	FDVRI ,	.FDRI,	175

	SETINS	MTOP. ,	..MTO,	024
	SETINS	RESET.,	..RES,	015
	SETINS	IN.   ,	..IN,	016
	SETINS	OUT.  ,	..OUT,	017
	SETINS	DATA. ,	..DAT,	020
	SETINS	FIN.  ,	..FIN,	021
	SETINS	RTB.  ,	..RTB,	022
	SETINS	WTB.  ,	..WTB,	023
	SETINS	SLIST.,	..SLI,	025
	SETINS	INF.  ,	..INF,	026
	SETINS	OUTF. ,	..OUF,	027
	SETINS	RERED.,	..RER,	030
	SETINS	NLI. ,	..NLI,	031
	SETINS	NLO.,	..NLO,	032
	SETINS	DEC.,	..DEC,	033
	SETINS	ENC.,	..ENC,	034

	SETINS	JUMPN ,	.JUN,	326
	SETINS	JUMPGE,	.JUGE,	325
	SETINS	JUMPL ,	.JUL,	321
	SETINS	JUMPG ,	.JUG,	327
	SETINS	ADDM  ,	.ADDM,	272
	SETINS	SKIPE ,	.SKE,	332
	SETINS	FADRM ,	.FARM,	146
	SETINS	SUBM  ,	.SUBM,	276

	SETINS	FSBM  ,	.FSM,	152
	SETINS	FSBRM ,	.FSRM,	156
	SETINS	IMULM ,	.IMUM,	222
	SETINS	FMPM  ,	.FMM,	162
	SETINS	FMPRM ,	.FMRM,	166
	SETINS	IDIVM ,	.IDIM,	232
	SETINS	FDVM  ,	.FDM,	172
	SETINS	FDVRM ,	.FDRM,	176

	SETINS	SKIPGE,	.SKGE,	335
	SETINS	SKIPLE,	.SKLE,	333
	SETINS	FADL  , .FADL,	141
NACBRE=	.-IBCTBL
	SETINS	JRST  ,	.JRST,	254
	SETINS	AOS   ,	.AOS,	350
	SETINS	SOS   ,	.SOS,	370
	SETINS	SKIPA ,	.SKA,	334
	SETINS	SETOM ,	.SEOM,	476
	SETINS	SETZM ,	.SEZM,	402
	SETINS	SKIPG , .SKG, 337
IOCTBL:	BLOCK	P1/4
	IFN	P1/4*4-P1,	;PARTIAL CODE WORD?
<	+P3			;YES, DUMP IT
>
INSTBL:				;INSTRUCTION TABLE
	PHASE	0

.FAL0:
	.FADL			;FADL
.ADD1:
	.ADD	15,		;ADD	15,
.AOJA0:
	.AOJA			;AOJA
.AOS0:
	.AOS			;AOS
.ARG0:
	.ARG			;ARG
.ARG1:				;INDIRECT ARG FOR VARIABLES
	.ARG	@
.ASH0:
	.ASH			;ASH
.LSH0:
	.LSH			;LSH
.BLT0:
	.BLT			;BLT
.DFN0:
	.DFN			;DFN
.FSC0:
	.FSC			;FSC
.FSC1:
	.FSC	233		;FSC	233
.RL1:
	.RL	1,		;HRL	1,
.RLOI0:
	.RLOI			;HRLOI
.RRM0:
	.RRM			;HRRM
.RRO1:
	.RRO	1,(16)		;HRRO	1,(16)
.RROI0:
	.RROI			;HRROI
.RROI1:
	.RROI	1,		;HRROI	1,
.HRRI0:
	.RRI			;HRRI 0,
.RLI0:
	.RLI			;HRLI 0, ;"21R"
.RRZ1:
	.RRZ	1,(16)		;HRRZ	1,(16)
.JRA1:
	.JRA	16,(16)		;JRA	16,(16)
.JRST0:
	.JRST			;JRST
.JRST1:
	.JRST	(1)		;JRST	(1)
.JRST2:
	.JRST	@(1)		;JRST	@(1)
.JSA0:
	.JSA			;JSA
.JSA1:
	.JSA	16,		;JSA	16,
.JSA2:
	.JSA	16,@		;JSA	16,@
.CIN1:
	.CIN	1,		;CAIN 1, ;"23FF"
.RRZ0:
	.RRZ	1,		;HRRZ 1, ;"23FF"
.ME1:
	.ME	15,		;MOVE	15,
.ME2:
	.ME	1,		;MOVE	1,
.MEI0:
	.MEI			;MOVEI
.MEI1:
	.MEI	1,		;MOVEI	1,
.MEI2:
	.MEI	16,		;MOVEI	16,
.MEM1:
	.MEM	15,		;MOVEM	15,
.MN1:
	.MN	15,		;MOVN	15,
.MNS0:
	.MNS			;MOVNS
.MSI0:
	.MSI			;MOVSI
IFDEF HARDFL,<                                                  ; *EJG* 06/23/76
.DMVN0:                                                         ; *EJG* 06/23/76
	.DMVN                   ;DMOVN                          ; *EJG* 06/23/76
>                                                               ; *EJG* 06/23/76

.POP1:
	.POP	1(1)		;POP	1(1)
.POP2:
	.POP	@(16)
.PSH1:
	.PSH	(16)		;PUSH	(16)
.PSH2:
	.PSH	@(16)		;PUSH	@(16)
.PSH3:
	.PSH	1(1)		;PUSH	1(1)
.PSHJ0:
	.PSHJ			;PUSHJ
.PSHJ1:
	.PSHJ	17,		;PUSHJ	17,
.SEA0:
	.SEA			;SETCA
.SEM0:
	.SEM			;SETCM
.SEMM0:
	.SEMM			;SETCMM
.SEO0:
	.SEO			;SETO
.SEOM0:
	.SEOM			;SETOM
.SEZM0:
	.SEZM			;SETZM
.SKA0:
	.SKA			;SKIPA
.SKE1:
	.SKE	1,		;SKIPE	1,
.SKGE0:
	.SKGE			;SKIPGE
.SKLE0:
	.SKLE			;SKIPLE
.SOJA0:
	.SOJA			;SOJA
.SOS0:
	.SOS			;SOS
.SUB1:
	.SUB	15,		;SUB	15,
.SUBI0:
	.SUBI			;SUBI
.TDNE0:
	.TDNE			;TDNE
.TDNN0:
	.TDNN			;TDNN
.TDZA0:
	.TDZA			;TDZA
.TLC1:
	.TLC	233000		;TLC	233000
.CMG0:
	.CMG			;CAMG
.CML0:
	.CML			;CAML
.CME0:
	.CME			;CAME
	.CME			;CAME
.CMN0:
	.CMN			;CAMN
	.CMN			;CAMN
.CMGE0:
	.CMGE			;CAMGE
.CMLE0:
	.CMLE			;CAMLE
.JUG0:
	.JUG			;JUMPG
.JUL0:
	.JUL			;JUMPL
.JUE0:
	.JUE			;JUMPE
	.JUE			;JUMPE
.JUN0:
	.JUN			;JUMPN
	.JUN			;JUMPN
.JUGE0:
	.JUGE			;JUMPGE
.JULE0:
	.JULE			;JUMPLE
.MEM2:			;"22A"
	.MEM	1,		;MOVEM 1, "22A"
.SKG0:				;"22A"
	.SKG			;SKIPG "22A"
.JRA2:				;JRA "22A"
	.JRA	16,@-1(16)	;JRA 16,@-1(16) "22A"
.ADD2:				;"22A"
	.ADD	16,		;ADD 16, "22A"
.OR0:
	.OR			;OR
	.ORM			;ORCM
	.ORA			;ORCA
	.ORB			;ORCB
	.ANB			;ANDCB
	.ANA			;ANDCA
	.ANM			;ANDCM
	.AN			;AND
.AN0:
	.AN
	.ANM
	.ANA
	.ANB
	.ORB
	.ORA
	.ORM
	.OR
.XOR0:
	.XOR			;XOR
	.EQV			;EQV
	.EQV
	.XOR
	.EQV
	.XOR
	.XOR
	.EQV
.ME0:
	.ME			;MOVE
	.ME
	-<.ME>
	-<.ME>
.MN0:
	.MN			;MOVN
	.MN
	-<.MN>
	-<.MN>
.MEM0:
	.MEM			;MOVEM
	.MEM
	-<.MEM>
	-<.MEM>
.MNM0:
	.MNM			;MOVNM
	.MNM
	-<.MNM>
	-<.MNM>

.ADD0:
	.ADD			;ADD
.FAR0:	.FAR			;FADR
	SIXBIT	/DFA.0/
	-<.FAR>
.SUB0:
	.SUB			;SUB
	.FSR			;FSBR
	SIXBIT	/DFS.0/
	-<.FSR>
.IMU0:
	.IMU			;IMUL
	.FMR			;FMPR
	SIXBIT	/DFM.0/
	SIXBIT	/CFM.0/
.IDI0:
	.IDI			;IDIV
	.FDR			;FDVR
	SIXBIT	/DFD.0/
	SIXBIT	/CFD.0/

.ADDM0:
	.ADDM			;ADDM
	.FARM			;FADRM
	SIXBIT	/DFAM.0/
	-<.FARM>
.SUBM0:
	.SUBM			;SUBM
	.FSRM			;FSBRM
	SIXBIT	/DFSM.0/
	-<.FSRM>
.IMUM0:
	.IMUM			;IMULM
	.FMRM			;FMPRM
	SIXBIT	/DFMM.0/
	SIXBIT	/CFMM.0/
.IDIM0:
	.IDIM			;IDIVM
	.FDRM			;FDVRM
	SIXBIT	/DFDM.0/
	SIXBIT	/CFDM.0/
..DAT0:
	..DAT			;DATA.
..FIN0:
	..FIN			;FIN.
..IN1:
	..IN	1,		;IN.	1,
..MTO0:
	..MTO			;MTO.
..OUT1:
	..OUT	1,		;OUT.	1,
..RES0:
	..RES			;RESET.
..RTB0:
	..RTB			;RTB.
..SLI0:
	..SLI			;SLIST.
..SLI1:
	..SLI	@		;SLIST.	@
..WTB0:
	..WTB			;WTB.
..DEC1:
	..DEC	1,		;DEC.	1,
..ENC1:
	..ENC	1,		;ENC.	1,
.CEXP2:
	.PSHJ	17,[SIXBIT /CEXP.2/]
.CEXP3:
	.PSHJ	17,[SIXBIT /CEXP.3/]
.DEXP2:
	.PSHJ	17,[SIXBIT /DEXP.2/]
.DEXP3:
	.PSHJ	17,[SIXBIT /DEXP.3/]
.EXER1:
	.PSHJ	17,[SIXBIT /EXER1./]
.IFIX:
	.JSA	16,IFISYM
.DFIX:
	.JSA	16,DFISYM
.FLOAT:
	.JSA	16,FLOSYM
.SNGL:
	.JSA	16,SNGLSM
WONHEA:					;WORD ONE HEADER
	XWD	4,1
WFOHEA:					;WORD FOUR HEADER
	XWD	6,2
FSIHEA:					;F4 SIGNAL HEADER
	XWD	400,0

IFNDEF	$DATA,
<
MACLOP:					;MOVE AC LOP
	MOVE	13,12
AACLOP:					;ADD AC LOP
	ADD	12,13
DOENLO:					;DO END LOP
	PUSHJ	17,2
DINLOP:					;DO INIT LOP
	PUSHJ	17,1
SASLOP:					;SET ARRAY SIZE LOP
	PUSHJ	17,0
>
ABSINS:
	XWD	777777,500001
EOPLOP:					;END OF PROGRAM LOP
	OCT	-2

	DEPHASE
				;LINE DELETED	;"23O"
PHEBYT:					;PNTR HEAD BYTE
	POINT	6,%10,23
RGRPNT:					;ROLL GROUP SIZE POINTER
	POINT	3,RGRSIZ(%02),2
HORTEN:					;HIGH ORDER TEN
	XWD	240000,0

IFNDEF	FILE0,
<
EXIRLI:
	XWD	-EXLEN1,CARBUF+CBLEN1
LENGTI:
	XWD	CBLEN1+EXLEN1,NCC1+1
>
PDPSET:
	XWD	-PDPLEN,PDPSTK-1
ZERCOR:
	XWD	IMPURE-1,IMPURE
TABBAS:					;TABLE BASES
	XWD	0,UNUTAB		;UNUSED TABLE
	XWD	0,OPTABL		;OP TABLE
	XWD	0,LFUTAB		;LIB FUNC TABLE
	XWD	0,LTAENT		;LAST TABLE ENTRY
UNUTAB:	0				;UNUSED TABLE

DEFINE	LEVEL	(ENTRYS,PRELEV,SSADR)
<
		BYTE(6)ENTRYS(12)PRELEV(18)SSADR>
DEFINE	ENTRY	(KEYS,OPQT,TRAITS,GENADR)
<
		BYTE(4)KEYS(14)OPQT(5)TRAITS(13)GENADR>

;ENTRYS - NUMBER OF ENTRIES AT THIS LEVEL
;PRELEV - ADDRESS OF PREVIOUS LEVEL W/ 1ST LEVEL AT 1
;SSADR  - INDEX INTO SUBORDINATE SCAN ADDRESS TABLE (SSATBL)
;KEYS   - INDICATES TYPE OF OPERATOR
	NOTOP==	10	;COMPLEMENTARY OPERATOR ADJACENT
	COMOP==	04	;COMMUTATIVE OPERATOR
	LOGOP==	02	;A LOGICAL OPERATOR
	RELOP==	01	;A RELATIONAL OPERATOR
;OPQT   - INDEX INTO OPERATOR QUOTE TABLE (OQTTBL)
;TRAITS - QUALITIES THE OPERATOR MAY POSSESS
	NEGOP==	20	;NEGATIVE OPERATOR MAY BE USED
	TRUID==	10	;TRUE IDENTITY
	UCOMP==	04	;USE COMPLEMENT OF RESULT
	ARITH==	02	;ARITHMETIC OPERATOR
	ADDIT==	01	;ADDITIVE OPERATOR
;GENADR - INDEX INTO OPERATOR GENERATION ADDRESS TABLE (OGATBL)

DEFINE	TBL	(NAME,TYPE,NUMBER)
<
	SIXBIT	/NAME/		;"23GG"
	BYTE	(3)TYPE	(33)NUMBER		;NAME	"23GG"
>
OPTABL:					;OP TABLE
	XWD	0,0
LEVEL	2,0,0
	ENTRY	<NOTOP+COMOP+LOGOP>,0,<TRUID+UCOMP>,15
	ENTRY	<COMOP+LOGOP>,1,<UCOMP>,0
LEVEL	1,1,0
	ENTRY	<COMOP+LOGOP>,2,0,1
LEVEL	1,4,1
	ENTRY	<COMOP+LOGOP>,3,<TRUID>,2
LEVEL	6,6,0
	ENTRY	<COMOP+RELOP>,4,0,3
	ENTRY	<NOTOP+COMOP+RELOP>,5,0,3
	ENTRY	<RELOP>,6,0,4
	ENTRY	<NOTOP+RELOP>,7,0,5
	ENTRY	<RELOP>,10,0,5
	ENTRY	<NOTOP+RELOP>,11,0,4
LEVEL	2,10,5
	ENTRY	<COMOP>,12,<ARITH+ADDIT>,6
	ENTRY	<COMOP>,13,<NEGOP+ARITH+ADDIT>,6
LEVEL	2,17,5
	ENTRY	0,14,<ARITH>,7
	ENTRY	0,15,<ARITH>,10
LEVEL	1,22,2
LFUTAB:						;LIB FUNC TABLE
	ENTRY	0,16,0,11

	TBL	(INT,REAL,1)
	TBL	(MAX0,INTEGER,2)
	TBL	(MAX1,REAL,2)
	TBL	(MIN0,INTEGER,2)
	TBL	(MIN1,REAL,2)
	TBL	(ISIGN,INTEGER,2)
	TBL	(IDIM,INTEGER,2)
DFISYM:			;INSERTED "24-4"
	TBL	(IDINT,DOUBLE,1)
	TBL	(IABS,INTEGER,1)

IFISYM:
	TBL	(IFIX,REAL,1)	;"23T" AND ALSO NEXT LINE
				;2 LINES DELETED "24-4"
	TBL	(MOD,INTEGER,2)
	TBL	(EOF1,INTEGER,1)
	TBL	(EOFC,INTEGER,1)
EOILIB:
	TBL	(EXP,REAL,1)
	TBL	(ALOG,REAL,1)
	TBL	(ALOG10,REAL,1)
	TBL	(ATAN,REAL,1)
	TBL	(ATAN2,REAL,2)
	TBL	(SIN,REAL,1)
	TBL	(SIND,REAL,1)
	TBL	(COS,REAL,1)
	TBL	(COSD,REAL,1)
	TBL	(TANH,REAL,1)
	TBL	(SINH,REAL,1)
	TBL	(COSH,REAL,1)
	TBL	(ASIN,REAL,1)
	TBL	(ACOS,REAL,1)
	TBL	(SQRT,REAL,1)
	TBL	(AINT,REAL,1)
	TBL	(AMOD,REAL,2)
	TBL	(AMAX0,INTEGER,2)
	TBL	(AMAX1,REAL,2)
	TBL	(AMIN0,INTEGER,2)
	TBL	(AMIN1,REAL,2)
	TBL	(SIGN,REAL,2)
	TBL	(DIM,REAL,2)
	TBL	(ABS,REAL,1)
FLOSYM:
	TBL	(FLOAT,INTEGER,1)
SNGLSM:
	TBL	(SNGL,DOUBLE,1)
	TBL	(REAL,COMPLEX,1)
	TBL	(AIMAG,COMPLEX,1)
	TBL	(CABS,COMPLEX,1)
				;LINE DELETED "24-6"
	TBL	(CHANG,REAL,1)
EORLIB:					;END OF REAL LIBS
	TBL	(DMOD,DOUBLE,2)
	TBL	(DEXP,DOUBLE,1)
	TBL	(DLOG,DOUBLE,1)
	TBL	(DLOG10,DOUBLE,1)
	TBL	(DATAN,DOUBLE,1)
	TBL	(DATAN2,DOUBLE,2)
	TBL	(DSIN,DOUBLE,1)
	TBL	(DCOS,DOUBLE,1)
	TBL	(DSQRT,DOUBLE,1)
	TBL	(DMAX1,DOUBLE,2)
	TBL	(DMIN1,DOUBLE,2)
	TBL	(DSIGN,DOUBLE,2)
	TBL	(DABS,DOUBLE,1)
	TBL	(DBLE,REAL,1)
EODLIB:					;END OF DBL LIBS
	TBL	(CEXP,COMPLEX,1)
	TBL	(CLOG,COMPLEX,1)
	TBL	(CSIN,COMPLEX,1)
	TBL	(CCOS,COMPLEX,1)
	TBL	(CSQRT,COMPLEX,1)
	TBL	(CMPLX,REAL,2)
LTAENT:					;LAST TABLE ENTRY
	TBL	(CONJG,COMPLEX,1)
EOCLIB:					;END OF COMPLX LIBS
			;TYPE
	INT=	0	;INTEGER ;"21N"
	UNU=	1	;UNUSED ;"21N"
	REA=	2	;REAL ;"21N"
	LOG=	3	;LOGICAL ;"21N"
	OCT=	4	;OCTAL ;"21N"
	HOL=	5	;HOLLERITH ;"21N"
	DOU=	6	;DOUBLE PRECISION ;"21N"
	COM=	7	;COMPLEX ;"21N"

;TSEMAT:
	;TYPE SELECTION MATRIX   ROW  V      COLUMN: INT,UNU,REA,LOG,OCT,HOL,DOU,COM	;"21N"
;	BYTE (12) <POINT 3,0,^D<14+3*INT>>_-^D24 (3) INT,INT,REA,INT,INT,INT,DOU,COM	;"21N"
;	BYTE (12) <POINT 3,0,^D<14+3*UNU>>_-^D24 (3) INT,INT,REA,INT,INT,INT,DOU,COM	;"21N"
;	BYTE (12) <POINT 3,0,^D<14+3*REA>>_-^D24 (3) REA,REA,REA,REA,REA,REA,DOU,COM	;"21N"
;	BYTE (12) <POINT 3,0,^D<14+3*LOG>>_-^D24 (3) INT,INT,REA,LOG,LOG,LOG,DOU,COM	;"21N"
;	BYTE (12) <POINT 3,0,^D<14+3*OCT>>_-^D24 (3) INT,INT,REA,LOG,OCT,OCT,DOU,COM	;"21N"
;	BYTE (12) <POINT 3,0,^D<14+3*HOL>>_-^D24 (3) INT,INT,REA,LOG,OCT,HOL,DOU,COM	;"21N"
;	BYTE (12) <POINT 3,0,^D<14+3*DOU>>_-^D24 (3) DOU,DOU,DOU,DOU,DOU,DOU,DOU,COM	;"21N"
;	BYTE (12) <POINT 3,0,^D<14+3*COM>>_-^D24 (3) COM,COM,COM,COM,COM,COM,COM,COM	;"21N"
TSEMAT:			;TYPE SELECTION MATRIX
	OCT	250300200067
	OCT	220300200067
	OCT	170322222267
	OCT	140300233367
	OCT	110300234467
	OCT	060300234567
	OCT	030366666667
	OCT	000377777777
	DEFINE	X	( RGRSIZ, RADIX50, FLAGS )
<	BYTE	(3) RGRSIZ (6) RADIX50 (9) FLAGS (18) -40+ >

CSTAT:
CSTATI=	.-40
RGRSIZ:

	X	1,00,000," "
	X	2,00,000,"!"
	X	1,00,004,042
	X	1,00,000,"#"
	X	1,46,200,"$"
	X	1,47,000,"%"
	X	1,00,000,"&"
	X	1,00,004,"'"

	X	1,00,004,"("
	X	1,00,040,")"
	X	1,00,200,"*"
	X	1,00,020,"+"
	X	1,00,040,","
	X	1,00,020,"-"
	X	2,45,004,"."
	X	2,00,240,"/"	;"23Q"

	X	1,01,006,"0"
	X	2,02,006,"1"
	X	5,03,006,"2"
	X	2,04,006,"3"
	X	3,05,006,"4"
	X	2,06,006,"5"
	X	1,07,006,"6"
	X	1,10,006,"7"

	X	5,11,006,"8"
	X	1,12,006,"9"
	X	1,00,000,":"
	X	3,00,000,";"
	X	1,00,000,"<"
	X	1,00,000,"="
	X	2,00,000,">"
	X	1,00,000,"?"
	X	1,00,000,"@"
	X	1,13,001,"A"
	X	1,14,001,"B"
	X	1,15,201,"C"
	X	1,16,211,"D"	;"23Q"
	X	1,17,011,"E"
	X	2,20,001,"F"
	X	1,21,001,"G"

	X	1,22,001,"H"
	X	1,23,001,"I"
	X	1,24,001,"J"
	X	1,25,001,"K"
	X	1,26,001,"L"
	X	1,27,001,"M"
	X	1,30,001,"N"
	X	1,31,001,"O"

	X	2,32,001,"P"
	X	1,33,001,"Q"
	X	1,34,001,"R"
	X	1,35,001,"S"
	X	1,36,001,"T"
	X	2,37,001,"U"	;"23GG"
	X	0,40,001,"V"
	X	0,41,001,"W"

	X	0,42,001,"X"
	X	0,43,001,"Y"
	X	0,44,001,"Z"
	X	0,00,000,"["
	X	0,00,000,"\"
	X	0,00,000,"]"
	X	0,00,000,"^"
	X	0,00,000,"_"
LIT:	LIT

REGADR==	7	;REGISTER ADDRESS MARK
MASK==		-1	;MASK BITS
NOT==		4	;COMPLEMENT ,BIT 3
DUMMY==		2	;DUMMY ,BIT 4
SIGN==		1	;SIGN ,BIT 5
INTEGER==	0	;POINTER TYPE ,BITS 0-2
REAL==		2
LOGICAL==	3
OCTAL==		4
LITERAL==	5
DOUBLE==	6
COMPLEX==	7

IFNDEF	REENTR,
<ZZ:
	PHASE	0
>
IFDEF	REENTR,<ZZ=0>

TYPMAS:

ITYEM:	BYTE	(3)  MASK	;INTEGER TYPE EM
ITYSTA:	BYTE	(3)  INTEGER

RTYEM:	BYTE	(3)  MASK
RTYSTA:	BYTE	(3)  REAL	;REAL TYPE EM

LTYEM:	BYTE	(3)  MASK	;LOGICAL TYPE EM
LTYSTA:	BYTE	(3)  LOGICAL

OCTEM:	BYTE	(3)  MASK		;"23Y"
OTYSTA:	BYTE	(3)  OCTAL

HTYEM:	BYTE	(3)  MASK
HTYSTA:	BYTE	(3)  LITERAL

DPTEM:	BYTE	(3)  MASK
DPTSTA:	BYTE	(3)  DOUBLE

CTYEM:	BYTE	(3)  MASK
CTYSTA:	BYTE	(3)  COMPLEX
LBLEM:
	BYTE	(18) 0 (6)  MASK
	BYTE	(18) 0 (6) LBLROL
GSPEM:
	BYTE	(18) 0 (6)  MASK
	BYTE	(18) 0 (6) GSPROL
REGEM:
	BYTE	(15) 0 (9)  MASK
REGSTA:	BYTE	(15) 0 (3) REGADR (6) REGROL
ICOEM:
	BYTE	(18) 0 (6)  MASK
	BYTE	(18) 0 (6) ICOROL
HCOEM:
	BYTE	(18) 0 (6)  MASK
	BYTE	(18) 0 (6) HCOROL
SCAEM:
	BYTE	(18) 0 (6)  MASK
	BYTE	(18) 0 (6) SCAROL
LDMEM:
	BYTE	(18) 0 (6)  MASK
	BYTE	(18) 0 (6) LDMROL
ARREM:
	BYTE	(18) 0 (6)  MASK
	BYTE	(18) 0 (6) ARRROL
SUBEM:
	BYTE	(18) 0 (6)  MASK
	BYTE	(18) 0 (6) SUBROL
NESEM:
	BYTE	(18) 0 (6)  MASK
	BYTE	(18) 0 (6) NESROL
LSPEM:
	BYTE	(18) 0 (6)  MASK
	BYTE	(18) 0 (6) LSPROL
IFNDEF	$DATA,
<
DSVEM:
	BYTE	(18) 0 (6)  MASK
	BYTE	(18) 0 (6) DSVROL
>
DAIEM:
	BYTE	(6) DUMMY (12) 0 (6)  MASK	;DUMMY ARRAY ID EM
	BYTE	(6) DUMMY (12) 0 (6)  ARRROL
DGSEM:
	BYTE	(6) DUMMY (12) 0 (6)  MASK	;DUMMY GLOBAL SPROG EM
	BYTE	(6) DUMMY (12) 0 (6)  GSPROL
TIDTRA:
	OCT	000000200000		;TRUE IDEN TRAIT
	OCT	000000200000
UCOTRA:
	OCT	000000100000		;USE COMPL TRAIT
	OCT	000000100000
CVAEM:
NOPTRA:
DEFTRA:
DEFEM:
	OCT	400000000000		;DEFINED TRAIT
	OCT	400000000000
COMTRA:
MDETRA:
MDEEM:
	OCT	200000000000		;MUL DEFINED TRAIT
	OCT	200000000000
APOEM:
APOMAS:
NEGTRA:
	OCT	000000400000		;ADR PLUS ONE EM
APOSTA:
	OCT	000040400000		;ADR PLUS ONE STAMP
LOPTRA:
	OCT	100000000000		;LOGICAL OP TRAIT
	OCT	100000000000
NOTEM:
NOTMAS:
LENEM:
ENAEM:
ROPTRA:
	OCT	040000000000		;NOT EM,ENTRY NAME EM
SANMAS:
	OCT	050000000000		;SIGN AND NOT MASK
PLUEM:
	OCT	010000000000		;PLUS EM
	OCT	000000000000
CONEM:
	BYTE	(19) 0 (2)  MASK		;CONST EM
	BYTE	(19) 0 (5)  ICOROL & CCOROL	;ALL CONSTANT ROLLS ARE NUMBERED IN THE TEENS
DITEM:
	BYTE	(2)  MASK			;DBL ITEM EM
	BYTE	(3)  DOUBLE & COMPLEX
INTEPN:
	BYTE	(18) 0 (6)  TEMROL		;INITIAL TEMP PNTR
ITETRA:
FSPEM:
DMYEM:
FREEM:
	BYTE	(4) 0 (1)  MASK		;DMY EM
	BYTE	(3) 0,  DUMMY
EVEEM:
	OCT	000000000001		;EVEN EM
	OCT	000000000000
MLBEM:
	BYTE	(18) 0 (6)  MASK		;MADE LBL EM
	BYTE	(18) 0 (6)  APNROL
TASMAS:					;TYPE AND SIGN MASK
DPNEM:
	BYTE	(3) MASK, SIGN		;DP NEG EM
	BYTE	(3) DOUBLE,SIGN
AREEM:
	BYTE	(19) 0 (5) MASK		;ARRAY REF EM
	BYTE	(19) 0 (5) AREROL
LOOCEM:
	BYTE	(18) 0 (5) MASK		;LIT OR OCTAL CONST EM
	BYTE	(18) 0 (6) HCOROL & OCOROL
PLOEM:
	BYTE	(3) MASK, NOT + SIGN	;POSITIVE LOGICAL EM
	BYTE	(3) LOGICAL, 0
COPEM:
	BYTE	(18) 0,MASK		;CONST ONE PNTR EM
	BYTE	(18) 0,<ICOROL>B23+3
ZRHEM:
	BYTE	(18) 0, MASK		;ZERO RH EM
	BYTE	(18) 0,0
EREEM:
MOPEM:
	BYTE	(30) 0 (6) 10+1		;EVEN REG EM
	BYTE	(30) 0 (6) 1
CMUEM:
	BYTE	(18) MASK			;CONST MULTIPLIER EM
	BYTE	(18) 0
PTEEM:
	BYTE	(19) 0 (5) MASK		;PERM TEMP EM
	BYTE	(19) 0 (5) ERRROL
PLIEM:
	BYTE	(18) MASK (6) MASK		;PROG LBL INST EM
	BYTE	(18) MASK (6) LBLROL
MLIEM:
	BYTE	(18) MASK (6) MASK		;MADE LBL INST EM
	BYTE	(18) MASK (6) APNROL
AINEM:
ABSEM:
	BYTE	(18) MASK (3) MASK		;ABS INST EM
	BYTE	(18) MASK (3) 5
ACMASK:					;AC MASK
	Z	1,

BICFAC:					;BUILD IMMEDIATE CONST FACTOR
	BYTE	(9)BICNUM
MOVINS:					;MOVE INST
	<.ME>_^D-27
IMUINS:					;IMUL INST
	<.IMU>_^D-27
MIMINS:					;MAX IMMED INST
	EXP	MAXIMI
MIFINS:					;MAX IMMED FLOATING INST
	EXP	MAXFIM
IINEM:
	OCT	000020000000		;INDIRECT INST EM
	OCT	000020000000
NTAEM:
	OCT	000017000000		;NO TAG EM
	OCT	000000000000
OAREM:
	BYTE	(19) 0 (5) MASK		;OBJECT ARRAY REF EM
	BYTE	(19) 0 (5) OARROL
APNEM:
ENPEM:
	BYTE	(18) MASK			;ALLOC PNTR EM
	SIXBIT *\\\*
MODOTR:
	OCT	000000060000		;MULT OF DIV OP TRAIT
AOPTRA:
	OCT	000000040000		;ARITH OP TRAIT
	OCT	000000040000
ADDTRA:
	OCT	000000020000		;ADDITIVE OP TRAIT
	OCT	000000020000
SINEM:
LSOAEM:
	OCT	740000000000		;LOADER SCALAR EM
	OCT	100000000000
FPO2EM:
	OCT	400777777777		;FL POWER OF 2 EM
	OCT	000400000000
LCOEM:
	OCT	740000000000		;LOADER COMMON EM
	OCT	440000000000
CCRPEM:
	OCT	100000700000		;CPLX CONST REAL PART EM
	OCT	000000100000
VAREM:		BYTE (9) 777		;I/O LIST VARIABLE INDICATOR
VARPNT:		BYTE (9) 555
IIVEM:		BYTE (9)0,777
IIVSTA:		BYTE (9)0,377
DREEM:
	BYTE	(6) 0 (30) MASK		;DO REG EM
DREPNT:
	BYTE	(15) 0 (3) REGADR (18) <REGROL>B23+16
DONEM:
DISMAS:
	BYTE	(24) 0 (12) MASK		;DISPL MSK
	BYTE	(24) 0 (12) 1		;DISPL ONE PNTR
ABCCMA:
	BYTE	(6) MASK (12) 0 (18) MASK	;NOT CHAR CNT MSK
ABSMAS:
	BYTE	(5) MASK (1) 0 (30) MASK	;NOT SIGN MASK
LHOEM:
LHAMAS:
	BYTE	(18) MASK		;LH ONES EM
LHZEM:
	BYTE	(18) MASK			;LH ZERO EM
RCOMAS:
	BYTE	(19) 0 (17) MASK	;REG CORR MASK
MINMAS:
MINEM:
	BYTE	(3) 0, SIGN	;MINUS EM
	BYTE	(3) 0,SIGN
RHOEM:
	BYTE	(18) 0, MASK	;RH ONES EM
MIMADR:
LHZMAS:
RHAMAS:
	BYTE	(18) 0,MASK	;RH MSK
OTAEM:
	BYTE	(18) 0(6) MASK	;OP TABLE EM
	BYTE	(18) 0 (6) OPCROL
MAITES:
	BCD	MAIN.
DATTES:
	BCD	DAT.
DMYSYM:
	BCD DUMMY.
ELOOP:
	XWD	-1,600000
RZEEM:
	BYTE	(15) 0 (21) MASK	;REG ZERO EM
BREPNT:
RZEPNT:
	BYTE (15) 0 (3) REGADR (6) REGROL (12) 1	;BLANK REG PNTR
RONPNT:
	BYTE (15) 0 (3) REGADR (6) REGROL (12) 2
R10PNT:
	BYTE (15) 0 (3) REGADR (6) REGROL (12) 11
R16PNT:
	BYTE (15) 0 (3) REGADR (6) REGROL (12) 17
R17PNT:
	BYTE (15) 0 (3) REGADR (6) REGROL (12) 20
INPPNT:
	<OPCROL>B23+23		;INT MPY PNTR
IADPNT:
	<OPCROL>B23+20		;INT ADD PNTR
CONPNT:
	<ICOROL>B23+3		;CONST ONE PNTR
CTWPNT:
	<ICOROL>B23+4		;CONST TWO PNTR
ABSCPN:
	<ICOROL>B23+5		;ALLBUT SIGN CONST PNTR
ACNMAS:
	BYTE	(21) 0 (15) MASK	;ABS CINT MASK
MAXSYM:
	EXP	N			;MAX INTEGER SYMBOL
MINSYM:
	EXP	I			;MIN INTEGER SYMBOL
HRLI1I:
	.RLI	1,
LWEMAS:
	OCT	177777777777		;LBL WITHOUT EMS MASK
MINONE:
TRUCON:
AONLOW=	.+ZZ
	XWD	-1,-1			;TRUE CONST, MINUS ONE
IFNDEF	$DATA,
<
DSTLOP:
	OCT	777777700000		;DATA STA LOP
ADDLOP:
	ADD	12,
MOVLOP:
	MOVE	12,
MPYLOP:
	IMUL	12,
IMULOP:
	IMULI	12,
DENLOP:
	JRST
>
;DO NOT SEPARATE

MPZERO:
	DEC	0			;MP ZERO
FALCON:
ZERO:
	DEC	0			;ZERO  FALSE CONST
TWO:
	DEC	2			;TWO
LCIMAS:
THREE:
	DEC	3			;THREE
FOUR:
	DEC	4			;FOUR
FIVE:
	DEC	5			;FIVE
SIX:
	DEC	6
SEVEN:
	OCT	7			;SEVEN
EIGHT:
	DEC	8			;EIGHT

IFNDEF	$CCONS,
<
SIXTEE:
	DEC	16			;SIXTEEN
SEVENT:
	DEC	17
TWEONE:
	DEC	21
>
MAXEXP:
	OCT	377			;MAX EXPONENT
CZPEM:
	BYTE	(19) 0 (17) MASK	;CONST ZERO PNTR EM
CZEPNT:
FCNPNT:
	BYTE	(19) 0 (17)<ICOROL>B23+1	;CONST ZERO PNTR
TCPEM:
	BYTE	(19) 0 (17) MASK	;TRUE CONST PNTR EM
TCOPNT:
	BYTE	(19) 0 (17) <ICOROL> B23+2	;TRUE CONST PNTR
FZPEM:
	BYTE	(19) 0 (17) MASK	;FL ZERO PNTR EM
	BYTE	(19) 0 (17) <FCOROL> B23+1
MHOCNT:
	DEC	1313			;MAX HOL CNT
MOSPOS:
	OCT	377777777777		;MAX FL NUMBER
MLBALL:
	DEC	99999			;MAX LBL
HBUINI:
	POINT	7,HOLBUF+ZZ,
PTESYM:
	BCD	TEMP.
LTESYM:
	BCD	%TEMP.
TEMEM:
	BYTE	(19) 0 (4) MASK		;TEMP EM
	BYTE	(19) 0 (5) ERRROL & TEMROL

IFNDEF	$NAME,
<
CTBCON:
	OCT	012000000000		;CONVERT TO BIN CONST
>
CPOSYM:
	BCD	CONST.
ONE:
NOFMAS:
	XWD	0,1			;ONE,SCRIPT VAR CHK TAG,
ASCIBL:
	ASCII	/     /
ASTERX:	DEC	10		;ASTERISK "22A"

; END OF DATA THAT MUST BE INITIALIZED

IFDEF	REENTR,	<
	END
>
;....EOF3


