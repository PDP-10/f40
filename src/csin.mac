	TITLE	CSIN	V.021
	SUBTTL	28-AUGUST-1969	KAREN KOLLING

;COMPLEX SINE AND COSINE FUNCTIONS.

;THESE ROUTINES CALCULATE THE SINE AND COSINE
;OF Z, WHERE Z=X+I*Y.  THE ALGORITHM USED IS:
;	SIN(Z)=SIN(X)COSH(Y)+I*COS(X)SINH(Y)
;	COS(Z)=COS(X)COSH(Y)-I*SIN(X)SINH(Y)

;THE ROUTINES ARE CALLED IN THE FOLLOWING MANNER:
;	JSA	16,CSIN
;	EXP	ARG
;WHERE ARG IS THE ADDRESS OF THE REAL PART OF THE
;COMPLEX ARGUMENT, THE IMAGINARY PART BEING IN
;ARG+1.  THE COMPLEX ANSWER IS RETURNED IN AC'S
;0 AND 1.

	ENTRY CCOS,CSIN
	EXTERN	EXP,SIN,COS,SINH,COSH,ALOG



	SIXBIT/CCOS/
CCOS:	0			;ENTRY TO COMPLEX COSINE ROUTINE.
	MOVEI	1,1		;SET THE FLAGWORD AC = 1.
	JRST	CSIN1		;GO TO SINE ROUTINE.

	SIXBIT/CSIN/
CSIN:	0			;ENTRY TO COMPLEX SINE ROUTINE.
	SETZM	1		;SET THE FLAGWORD AC TO 0.

CSIN1:	MOVEM	1,FLGWRD	;SET UP THE FLAGWORD ITSELF.
	MOVE	1,(16)		;PUT THE ADDR. OF Z IN AC 1.
	MOVE	0,(1)		;PUT X IN AC 0.
	MOVE	1,1(1)		;PUT Y IN AC 1.
	MOVEM	1,YSAVE		;SAVE Y.
	MOVEM	2,SAVE2		;SAVE THE CONTENTS OF AC 2.
	MOVE	2,0		;PUT X IN AN AC NE 0 OR 1.
	JSA	16,SIN		;CALCULATE
	EXP	2		;THE SIN(X).
	MOVEM	0,SINX		;STORE RESULT OF SIN(X).
	JSA	16,COS		;CALC. COS(X) AND
	EXP	2		;STORE THE ANSWER
	MOVEM	0,COSX		;IN COSX.
	SKIPN	FLGWRD		;IF THIS IS CSIN ROUTINE,
	JRST	.+4		;THEN JUMP AHEAD.
	MOVN	2,SINX		;OTHERWISE, PUT -SIN(X)
	EXCH	2,COSX		;IN COSX, AND COS(X)
	MOVEM	2,SINX		;IN SINX.
	SKIPN	YSAVE		;SKIP UNLESS Z IS REAL, IN WHICH
	JRST	CSIN2		;CASE, GO TO THE SIMPLE CASE.
	MOVM	2,YSAVE		;/Y/ TO AC 2.
	CAMLE	2,EIGHT8	;IF /Y/ TOO LARGE FOR SIMPLE
	JRST	OVFL		;SINH OR COSH, GO TO OVFL.
	MOVE	2,YSAVE		;Y TO AC 2.
	JSA	16,SINH		;CALC. SINH(Y) AND
	EXP	2		;STORE IT
	MOVEM	0,FLGWRD	;IN FLGWRD.
	JSA	16,COSH		;CALC. COSH(Y) AND
	EXP	2		;LEAVE THE ANSWER IN AC 0.
	FMPR	0,SINX		;CALC. THE REAL PART OF THE ANS.
	MOVE	1,FLGWRD	;SINH(Y) TO AC 1.
	FMPR	1,COSX		;CALC. THE IMAG. PART OF THE ANS.





OUT:	MOVE	2,SAVE2		;RESTORE AC 2.
	JRA	16,1(16)	;RETURN.

CSIN2:	MOVEI	1,0		;SET THE IMAG. PART OF THE ANSWER = 0.
	MOVE	0,SINX		;SET REAL(ANSWER)=TRIG. FN.
	JRST	OUT		;GO TO RETURN.

OVFL:	MOVM	2,SINX		;/SIN(X)/ TO AC 2.
	JUMPN	2,.+3		;IF ARG FOR ALOG IS
	SETZM	FLGWRD		;ZERO, SET REAL(ANS) = 0,
	JRST	IMAG		;AND JUMP AHEAD.
	JSA	16,ALOG		;CALC. THE LOG(/SIN(X)/) AND
	EXP	2		;LEAVE THE ANSWER IN AC 0.
	FSBR	0,LOG2BE	;CALC. (LOG(/SIN(X)/))-(LOG(2)).
	MOVM	2,YSAVE		;/Y/ TO AC 2.
	FADR	2,0		;CALC. (LOG(/SIN(X)/))-(LOG(2))+/Y/.
	JSA	16,EXP		;CALC. (E**/Y/)*/SIN(X)/)/2.
	EXP	2		;AND
	MOVEM	0,FLGWRD	;SAVE THE ANSWER IN FLGWRD.
	SKIPGE	SINX		;IF ANS. IS TO BE < 0,SET
	MOVNM	0,FLGWRD	;ANS. < 0.
IMAG:	MOVM	2,COSX		;/COS(X)/ TO AC 2.
	JUMPN	2,.+3		;IF ARG FOR ALOG = 0,
	SETZM	1		;SET IMAG(ANSWER)=0, AND
	JRST	IMAG2		;JUMP AHEAD.
	JSA	16,ALOG		;CALC. LOG(/COS(X)/) AND
	EXP	2		;LEAVE THE ANSWER IN AC 0.
	FSBR	0,LOG2BE	;CALC. LOG(/COS(X)/))-(LOG(2)).
	MOVM	2,YSAVE		;/Y/ TO AC 2.
	FADR	2,0		;CALC. LOG(/COS(X)/)-(LOG(2))+/Y/.
	JSA	16,EXP		;CALC. (/COS(X)/)*
	EXP	2		;(E**/Y/)/2.
	SKIPGE	YSAVE		;SET THE SIGN NEGATIVE IF
	MOVN	0,0		;SINH(Y) WAS NEGATIVE.
	SKIPGE	COSX		;NEGATE THE SIGN IF
	MOVN	0,0		;COS(X) WAS NEGATIVE. PUT
	MOVE	1,0		;THE IMAG. PART OF THE ANS. IN AC 1.
IMAG2:	MOVE	0,FLGWRD	;PUT THE REAL PART OF THE ANS. IN AC 0.
	JRST	OUT		;GO TO RETURN.

EIGHT8:	207540074636
LOG2BE:	200542710300
PIOT:	201622077325
YSAVE:	0
SAVE2:	0
SINX:	0
COSX:	0
FLGWRD:	0
	END

