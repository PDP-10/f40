		TITLE	PDUMP  V.30.162
		SUBTTL	20-MAY-71	/DMN
;FROM	1 MAY 1966 ED YOURDON, 2/12/68 NSR

	;THE PROGRAMS DUMP AND PDUMP MAY BE CALLED BY A FORTRAN PROGRAM
	;IN THE FOLLOWING MANNER:
	;	CALL DUMP(A(1),B(1),F(1),. . .,A(N),B(N),F(N))
	;	CALL PDUMP(A(1),B(1),F(1),.. .,A(N),B(N),F(N))
	;BOTH PROGRAMS CAUSE CORE TO BE DUMPED BETWEEN THE LIMITS A(I)
	;AND B(I), AS SPECIFIED BY THE MODE PARAMETER F(I). EITHER
	;A(I) OR B(I) MAY BE UPPER OR LOWER CORE LIMITS. DUMP CALLS
	;[SIXBIT /EXIT/] WHEN DONE, WHILE PDUMP RESTORES THE STATE
	;OF THE MACHINE AND RETURNS TO THE USERS PROGRAM. BOTH
	;PROGRAMS INDICATE THE CONTNETS OF THE ACCUMULATORS AND THE
	;FOLLOWING FLAGS BEFORE BEGINNING THE ACTUAL CORE DUMP:
	;	AR OV FLAG
	;	AR CRY0 FLAG
	;	AR CRY1 FLAG
	;	PC CHANGE FLAG
	;	BIS FLAG
	;THE MODE OF THE DUMP IS CONTROLLED BY THE PARAMETER F(I), WHICH
	;MAY BE ONE OF THE FOLLOWING NUMBERS:
	;	0	OCTAL		(O12 FORMAT)
	;	1	FLOATING POINT	(G12.5 FORMAT)
	;	2	INTEGER		(I12 FORMAT)
	;	3	ASCII		(A12 FORMAT)
	;	4	DOUBLE PRECISION (G25.16)
	;THE FOLLOWING CONVENTIONS HAVE BEEN ADOPTED FOR UNUSUAL
	;ARGUMENT LISTS:
	;	1. IF NO ARGUMENTS ARE GIVEN, THE ENTIRE USER AREA
	;	   IS DUMPED IN OCTAL.
	;	2. IF THE LAST MODE ASSIGNMENT, F(N), IS MISSING,
	;	   THAT SECTION OF CORE IS DUMPED IN OCTAL.
	;	3. IF THE LAST TWO ARGUMENTS, B(N) AND F(N), ARE MISSING
	;	   AN OCTAL DUMP IS MADE FROM A(N) TO THE END OF USER AREA
	;	4. AN ILLEGAL MODE ASSIGNMENT CAUSES THE DUMP TO BE
	;	   MADE IN OCTAL.
	;IF A GROUP OF REGISTERS HAVE THE SAME CONTENTS, DUMP AND
	;PDUMP WILL FINISH PRINTING THE CURRENT LINE, THEN INDICATE THE NUMBER OF
	;OF REPEATED LINES WITH A COMMENT
	;LOCATION XXXXXX THROUGH XXXXXX CONTAIN XXXXXXXXXXXX

OPDEF	RESET.	[15B8]
OPDEF	IN.	[16B8]
OPDEF	OUT.	[17B8]
OPDEF	DATA.	[20B8]
OPDEF	FIN.	[21B8]
OPDEF	RTB.	[22B8]
OPDEF	WTB.	[23B8]
OPDEF	MTOP.	[24B8]
OPDEF	SLIST.	[25B8]
OPDEF	INF.	[26B8]
OPDEF	OUTF.	[27B8]
OPDEF	RERED.	[30B8]
OPDEF	NLI.	[31B8]
OPDEF	NLO.	[32B8]
OPDEF	DEC.	[33B8]
OPDEF	ENC.	[34B8]
OPDEF	FCALL.	[35B8]

	ENTRY	PDUMP,DUMP
	EXTERN  FORSE.,EXIT.,JOBFF,ALPHO.,INTO.,FLOUT.,OCTO.,DOUBT.

	;ACCUMULATOR ASSIGNMENTS AND PARAMETER ASSIGNMENTS

		P=	17	;PUSHDOWN POINTER
		Q=	16	;JSA ACCUMULATOR
		B=	3	;SCRATCH
		C=	4	;...
		S=	5	;ADDRESS OF LOCATION CURRENTLY DUMPED
		F=	6	;ADDRESS OF HIGH LOCATION TO BE DUMPED
		I=	7	;ARGUMENT INDICATOR
		L=	10	;LOOP COUNTER
		FRMT=	11	;HOLDS FORMAT FOR REPEATED LINES
		PP=	15	;BLT AC, ALSO HOLDS A FORMAT ADDRESS

		N=	12	;SIZE OF AC BLOCK TO BE SAVED ON PD LIST
		DEVICE==-3	;DEVICE ASSIGNMENT FOR PRINT
		NLIST= 5	;NO. OF DIFFERENT FORMAT DUMPS AVAILABLE

DUMP:	0			;BEGINNING OF DUMP ROUTINE
	RESET.			;RESET ALL IO DEVICES
	JSR	DUMPA		;CALL COMMON DUMPING ROUTINE
	JRST	EXIT.		;CALL /EXIT/ WHEN DONE

PDUMP:	0			;BEGINNING OF PDUMP ROUTINE
	JSR	DUMPA		;CALL COMMON DUMPING ROUTINE
	JRA	Q, (Q)		;RETURN TO USER PROGRAM

DUMPA:	0			;BEGINNING OF COMMON DUMPING
	PUSH	P, PP		;SAVE BLT AC
	HRRZI	PP, 1(P)	;SET UP BLT POINTER IN AC PP
	ADD	P, NUMBER	;MAKE ROOM ON PUSHDOWN LIST
	BLT	PP, (P)		;BLT ACS ONTO PUSHDOWN LIST
	MOVEI	B, MESS1	;PRINT MESSAGE ABOUT FLAGS
	OUT.	B, DEVICE	;...
	MOVE	C, BYTEP	;GET BYTE POINTER FOR FLAGS
	MOVEI	F, 5		;LOOP FOR FIVE FLAGS
FLAGS:	ILDB	B, C		;GET FLAG BIT STORED BY JSR
	MOVE	S, OFFON(B)	;GET EITHER "OFF" OR "ON"
	DATA.	S		;OUTPUT IT
	SOJG	F, FLAGS	;LOOP BACK FOR MORE FLAGS
	FIN.			;FINISH THIS FORMAT STATEMENT
	MOVEI	B, MESS2	;PRINT MESSAGE ABOUT ACS
	OUT.	B, DEVICE	;...
	CLEARB	S, I		;AC0-AC7, SET INDICATOR TO ZERO
	DATA.	S		;PRINT CONTENTS OF AC S
	CAIGE	S, 7		;WHICH CONTAINS 0,1,2,3,4,5,6,7
	AOJA	S, .-2		;LOOP BACK UNTIL DONE
	MOVEI	F, 1-N(P)	;GET CONTENTS OF AC0-AC7 OFF PD
	DATA.	(F)		;OUTPUT THEM
	CAIGE	F, 1-N+7(P)	;LOOP FOR 8 ACCUMULATORS
	AOJA	F, .-2
	MOVEI	S, 10		;PRINT AC10 - AC17
	DATA.	S
	CAIGE	S, 17		;LOOP FOR 8 ACS
	AOJA	S, .-2
	MOVNI	S, 4		;CONTENTS OF AC10-AC14
	DATA.	14(S)		;ADDRESS WILL POINT TO AC
	AOJLE	S, .-1		;LOOP FOR 5 ACS
	DATA.	-N(P)		;GET THE BLT ACCUMULATOR
	DATA.	16		;GET AC 16
	DATA.	17		;GET AC 17
	FIN.			;END OF FORMAT STATEMENT

;ARGUMENT PROCESSOR
SGET:	MOVEI	B, MESS3	;OUTPUT SOME LINE FEEDS AT
	OUT.	B, DEVICE	;BEGINNING OF EACH SECTION
	FIN.			;END OF THIS FORMAT STATEMENT
	LDB	B, [POINT 9,(Q),8] ;PICK UP OPCODE OF FIRST ARG
	CAIE	B, 320		;IS IT THE "ARG" PSEUDO-OP?
	JRST	ENDCHK		;NO, QUIT OR DUMP ALL OF CORE
	MOVEI	S, @(Q)		;YES, PICK UP THE ADDRESS
	AOJ	I,		;INDICATE THAT ARGUMENTS HAVE BEEN SEEN
	LDB	B, [POINT 9,1(Q),8] ;PICK UP OPCODE OF SECOND ARG
	CAIE	B, 320		;IS IT THE "ARG" PSEUDO-OP?
	JRST	ENDCK2		;NO, END OF ARGUMENT LIST
	MOVEI	F, @1(Q)	;YES, PICK UP THE ADDRESS
	LDB	B, [POINT 9,2(Q),8] ;PICK UP OPCODE OF THIRD ARG
	CAIE	B, 320		;IS IT THE ARG PSEUDO-OP?
	AOJA	Q, ENDCK3	;NO, END OF ARGUMENT LIST
	MOVE	C, @2(Q)	;YES, GET THE FORMAT NUMBER
	CAIL	C,NLIST		;IS THIS A LEGAL ARGUMENT
	AOJA	Q, ENDCK3	;YES, DUMP IN OCTAL MODE
SCHEK:	CAML	S, F		;ARE ARGUMENTS IN ORDER?
	EXCH	S, F		;NO, SWITCH THEM
	HLRZ	PP, LIST(C)	;YES, SET UP FORMAT ADDRESSES
	HRRZ	FRMT, LIST(C)	;...
	MOVE	B,TABLE(C)	;V6 SET UP FORTRAN DATA UUO
	DPB	B,[POINT 4,W1,12]	;V6 DEPOSIT POINTER
	DPB	B,[POINT 4,W2,12]	;V6 ....
	DPB	B,[POINT 4,W3,12]	;V6....
	DPB	B,[POINT 4,OLOOP2,12]    ;V6....

;MAIN DUMP PROCESSOR

DPROC:	MOVE	B, S		;GET CURRENT ADDRESS IN B
	MOVE	L, S		;POINTER IN REPETITION CHECK
	MOVE	C, (S)		;MEMORY WORD FOR REPETITION CHECK
LOOK:	CAMN	C, (L)		;DO WORDS MATCH?
	CAIGE	F, (L)		;FINISHED THIS SECTION OF CORE?
	JRST	DIFF		;GO COMPUTE REPEATED LINES
	CAIL	L, 7(S)		;FINISHED CHECKING A LINE?
	ADDI	S, 10		;YES, INCREMENT S TO NEXT LINE
	AOJA	L, LOOK		;INCREMENT POINTER, CHECK MORE
DIFF:	CAMN	B, S		;WERE ANY LINES REPEATED?
	JRST	OLOOP1		;NO, DUMP THIS LINE INDIVIDUALLY
	OUT.	FRMT, DEVICE	;YES, GET FORMAT FOR MESSAGE
W1:	DATA.	,C		;OUTPUT REPEATED WORD
	FIN.			;END OF THIS FORMAT STATEMENT
	MOVEI	C, MESS4	;MESSAGE IS IN TWO PARTS
	OUT.	C, DEVICE	;PRINT PART ABOUT ADDRESSES
W2:	DATA.	,B		;FIRST LOCATION THAT REPEATED
	MOVEI	B, -1(S)	;LAST LOCATION, S WAS ONE OFF
W3:	DATA.	,B		;OUTPUT IT
	FIN.			;END OF REPETITION MESSAGE
OLOOP1:	CAMLE	S, F		;ALL DONE DUMPING?
	JRST	NEXT+1		;YES, CHECK ARGUMENTS
	OUT.	PP, DEVICE	;NO, OUTPUT FOR 8 WORDS/LINE
	MOVEI	B, 10		;LOOP COUNTER
W4:	DATA.	S		;ADDRESS FOR THIS LINE
OLOOP2:	DATA.	,(S)		;MEMORY WORD
	CAML	S, F		;ALL DONE DUMPING
	JRST	NEXT		;YES, CHECK ARGUMENTS
	CAIE	PP,DFRMT	;DOUBLE PRECISION?
	AOJA	S,.+3		;NO, MOVE POINTER TO NEXT WORD
	ADDI	S,2		;YES, ADVANCE POINTER ONE WORD
	SOJ	B,		;OUTPUTS ONLY 4 WORDS
	SOJG	B,OLOOP2	;DONE WITH THIS LINE?
	FIN.			;YES, FINISH OFF FORMAT STATEMENT
	JRST	DPROC		;SCAN NEXT LINE


;ROUTINES THAT ARE CALLED AT TERMINATION OF ARGUMENT STRINGS,
;AND END OF CORE SECTION DUMPS

ENDCHK:	JUMPN	I, SDOUT	;ANY ARGUMENTS?
	SOJ	Q,		;ACCOUNT FOR THE AOJA TO COME
	HRRZI	S, 20		;DUMP FROM 20
ENDCK2:	HRRZ	F, JOBFF	;TO END OF USER AREA
ENDCK3:	CLEARB	C, I		;END OF DUMP, OCTAL MODE
	AOJA	Q, SCHEK	;FIX EXIT, CHECK CORE LIMITS

SDOUT:	MOVEM	Q, Q+1-N(P)	;SAVE EXIT ACCUMULATOR
	HRLZI	PP, 1-N(P)	;FIX BLT POINT AC
	BLT	PP, N-1		;GET ACS BACK FROM PD LIST
	SUB	P, NUMBER	;FIX UP PUSHDOWN POINTER
	POP	P, PP		;RESTORE BLT AC
	JRST	@DUMPA		;EXIT FROM COMMON DUMPING ROUTINE

NEXT:	FIN.			;FINISH FORMAT
	JUMPE	I, SDOUT	;MORE ARGUMENTS TO COME?
	ADDI	Q, 3		;UPDATE POINTER
	JRST	SGET		;GO GET SOME MORE ARGUMENTS


;FORMAT STATEMENTS FOR OUTPUT

MESS1:	ASCII	"(1H148X9HCORE DUMP/1H 7HOV FLAG17X9HCRY0"
	ASCII	" FLAG15X9HCRY1 FLAG15X14HPC CHANGE FLAG9"
	ASCII	"X8HBIS FLAG/1H 5(A9,15X))"
MESS2:	ASCII	"(2(1H-8(9X3HAC O2)/7X8O14/))"
MESS3:	ASCII	"(1H-)"
MESS4:	ASCII	"(11H+LOCATIONS O6,9H THROUGH O6,9H CONTAIN /1H )"

;MORE FORMAT STATEMENTS AND SOME CONSTANTS, TOO
OFRMT:	ASCII	"(1H0,O6,8O14)"
EFRMT:	ASCII	"(1H0,O6,8G14.5)"
IFRMT:	ASCII	"(1H0,O6,8I14)"
AFRMT:	ASCII	"(1H0,O6,8A14)"
DFRMT:	ASCII	"(1H0,O6,4G25.16)"
OFRMT2:	ASCII   "(1H0,40X,O14)"
EFRMT2:	ASCII	"(1H0,40X,G14.5)"
IFRMT2:	ASCII	"(1H0,40X,I14)"
AFRMT2:	ASCII	"(1H0,40X,A14)"
DFRMT2:	ASCII	"(1H0,40X,G25.16)"
OFFON:	ASCII	"OFF  "
	ASCII	"ON   "
LIST:	XWD	OFRMT, OFRMT2
	XWD	EFRMT, EFRMT2
	XWD	IFRMT, IFRMT2
	XWD	AFRMT, AFRMT2
	XWD	DFRMT,DFRMT2

TABLE:	EXP	4,2,0,5,6
BYTEP:	POINT 1, DUMPA
NUMBER:	XWD	N, N

	END

