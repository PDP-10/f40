	TITLE	CEXP	V.027
	SUBTTL	15-JUL-70	KAREN KOLLING/DMN
;FROM	V.021	7-SEP-69

;COMPLEX EXPONENTIAL FUNCTION.

;THIS ROUTINE CALCULATES THE EXPONENTIAL OF A
;COMPLEX ARGUMENT Z=X+I*Y IN THE FOLLOWING
;MANNER:

;IF -89.415... <= X <= +88.029...,

;	CEXP(Z)=EXP(X)*[COS(Y)+I*SIN(Y)]

;IF X < -89.415...,

;	CEXP(Z)=0

;AND AN ERROR MESSAGE IS RETURNED FOR BOTH THE
;REAL AND THE IMAGINARY PARTS UNLESS EITHER
;COS(Y) OR SIN(Y) IS IDENTICALLY ZERO.

;IF X>+88.029...,

;  REAL(CEXP(Z))=[EXP((ALOG(/COS(Y)/))+X)]*[SIGN(COS(Y))]

;  IMAG(CEXP(Z))=[EXP((ALOG(/SIN(Y)/))+X)]*[SIGN(SIN(Y))]


;THE CALLING SEQUENCE FOR THE ROUTINE IS AS FOLLOWS:

;	JSA	16,CEXP
;	EXP	ARG

;THE REAL PART OF THE ANSWER IS LEFT IN AC 0.
;THE IMAGINARY PART OF THE ANSWER IS LEFT IN AC 1.


	EXTERN	ALOG,EXP,SIN,COS,TYPER.
	ENTRY	CEXP




	SIXBIT	/CEXP/
CEXP:	0			;ENTRY TO COMPLEX EXP. ROUTINE.
	MOVE	1,(16)		;PUT ADDR. OF Z IN AC 1.
	MOVE	0,(1)		;X TO AC 0.
	MOVE	1,1(1)		;Y TO AC 1.
	MOVEM	2,SAVE2		;SAVE THE CONTENTS OF AC 2.
	MOVEM	3,SAVE3		;SAVE THE CONTENTS OF AC 3.
	MOVEM	0,2		;X TO AC 2.
	MOVEM	1,3		;X TO AC 3.
	JSA	16,COS		;FIND THE
	EXP	3		;COS(Y) AND STORE
	MOVEM	0,COSY		;IT IN COSY.
	JSA	16,SIN		;FIND THE
	EXP	3		;SIN(Y) AND STORE
	MOVEM	0,SINY		;IT IN SINY.
	CAMGE	2,MIN89		;IF X < -89.415...,
	JRST	XVRYNG		;THEN GO TO XVRYNG.
	CAMLE	2,PLS88		;IF X >+88.029...,
	JRST	XVRYPL		;THEN GO TO XVRYPL.
	JSA	16,EXP		;O'E, FIND E**X
	EXP	2		;AND LEAVE IT IN AC 0.
	MOVE	1,SINY		;FORM (E**X)*(SIN(Y)) AND
	FMPR	1,0		;STORE IT IN AC 1.
	FMPR	0,COSY		;STORE (E**X)*(COS(Y)) IN AC 0.
OUT:	MOVE	2,SAVE2		;RESTORE THE CONTENTS OF AC 2.
	MOVE	3,SAVE3		;RESTORE THE CONTENTS OF AC 3.
	JRA	16,1(16)	;RETURN


XVRYNG:	SKIPN	COSY		;IF COS(Y)=0, THE
	JRST	.+3		;REAL(ANS.) IS EXACTLY 0.
	MOVEI	0,4		;O'E, REAL(ANS.)=0 PLUS
	PUSHJ	17,TYPER.	;AN ERROR MESSAGE.
	SKIPN	SINY		;IF SIN(Y)=0, THE
	JRST	.+3		;IMAG(ANS.) IS EXACTLY 0.
	MOVEI	0,4		;O'E, IMAG(ANS.)=0 PLUS
	PUSHJ	17,TYPER.	;AN ERROR MESSAGE.
	SETZB	0,1		;ANSWER=(0,0)
	JRST	OUT		;GO TO RETURN.

XVRYPL:	SKIPN	SINY		;IF SIN(Y)=0, THEN IMAG(ANS)
	JRST	IZERO		;=0, GO TO IZERO.
	MOVM	3,SINY		;O'E, /SIN(Y)/TO AC NE 0 OR 1.
	JSA	16,ALOG		;FIND THE LOG (/SIN(Y)/)
	EXP	3		;AND STORE IT IN AC 0.
	FADR	0,2		;CALC. (LOG(/SIN(Y)/)) + X
	MOVE	3,0		;AND STORE IT IN AC NE 0 OR 1.
	JSA	16,EXP		;CALC. (E**X)*(/SIN(Y)/)
	EXP	3		;AND STORE
	MOVEM	0,SAVIMG	;IT IN SAVIMG.
	SKIPGE	SINY		;MAKE IT NEGATIVE IF
	MOVNM	0,SAVIMG	;SIN(Y)<0.
REAL:	SKIPN	COSY		;IF COS(Y)=0, THEN REAL(ANS.)
	JRST	RZERO		;=0, SO GO TO REZERO.
	MOVM	3,COSY		;O'E, /COS(Y)/ TO AC NE 0 OR 1.
	JSA	16,ALOG		;FIND THE LOG (/COS(Y)/)
	EXP	3		;AND STORE IT IN AC 0.
	FADRM	0,2		;CALC. (LOG(/COS(Y)/)) + X
	JSA	16,EXP		;CALC. (E**X)*(/COS(Y)/)
	EXP	2		;AND STORE IT IN AC 0.
	SKIPGE	COSY		;MAKE IT NEGATIVE IF
	MOVNS	0		;COS(Y) WAS NEGATIVE.
	MOVE	1,SAVIMG	;RESTORE IMAG(ANS.)
	JRST	OUT		;GO TO RETURN.

IZERO:	SETZM	SAVIMG		;SET LOC OF IMAG(ANS.)=0.
	JRST	REAL		;RETURN TO CALC.

RZERO:	SETZ	0,		;SET REAL(ANS.)=0.
	MOVE	1,SAVIMG	;SET UP IMAG(ANS.).
	JRST	OUT		;GO TO RETURN.

SINY:	0
COSY:	0
SAVIMG:	0
SAVE2:	0
SAVE3:	0
MIN89:	570232254037
PLS88:	207540074636

	END

