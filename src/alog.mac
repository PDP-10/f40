	TITLE	ALOG  V.027
	SUBTTL 17-JUL-70	/KK/DMN
;FROM	V.022	18-DEC-69

;FROM V.020.
;FLOATING POINT SINGLE PRECISION LOGARITHM FUNCTION
;LOG(ABSF(X)) IS CALCULATED BY THE SUBROUTINE, AND AN
;ARGUMENT OF ZERO IS RETURNED AS MINUS INFINITY.

;ALOG IS THE ENTRY POINT FOR LOGE(X), AND
;ALOG10 IS THE ENTRY POINT FOR LOG10(X).
;FOR LOGE(X), THE ALGORITHM IS:
;	LOGE(X) = (I + LOG2(F))*LOGE(2)
;	WHERE X = (F/2)*2^(I+1), AND LOG2(F) IS GIVEN BY
;	LOG2(F) = C1*Z + C3*Z^3 + C5*Z^5 - 1/2
;	AND Z = (F-SQRT(2))/(F+SQRT(2))
;FOR LOG10(X), THE ALGORITHM IS:
;	LOG10(X) = LOGE(X)*LOG10(E)

;THE CALLING SEQUENCE FOR THE ROUTINE IS AS FOLLOWS:
;	JSA	Q, ALOG OR ALOG10
;	EXP	ARG
;THE ANSWER IS RETURNED IN ACCUMULATOR A

	A=	0
	B=	1
	Q=	16

	ENTRY ALOG,ALOG10
	EXTERN	TYPER.

	SIXBIT/ALOG10/
ALOG10:	0			;ENTRY TO LOG TO THE BASE 10 ROUTINE.
	MOVM	0,@(16)		;GET /X/ IN AC 0.
	JUMPE	0,LZERO		;CHECK FOR ZERO ARG.
	MOVEM	0,TEMP		;ARG TO LOC NE 0 OR 1.
	JSA	16,ALOG		;CALC THE LOG TO THE
	EXP	TEMP		;BASE E.
	FMPR	0,LOG10A	;MULTIPLY IT BY LOG10(E).
	JRA	16,1(16)	;EXIT.

LOG10A:	177674557305
TEMP:	0

	SIXBIT	/ALOG/
ALOG:	0			;ENTRY TO LOG TO THE BASE E ROUTINE.
	MOVM	A, @(Q)		;GET ABSF(X)
	JUMPE	A, LZERO	;CHECK FOR ZERO ARGUMENT
	CAMN	A, ONE		;CHECK FOR 1.0 ARGUMENT
	JRST	ZERANS		;IT IS 1.0 RETURN ZERO ANS.
	ASHC	A, -33		;SEPARATE FRACTION FROM EXPONENT
	ADDI	A, 211000	;FLOAT THE EXPONENT AND MULT. BY 2
	MOVSM	A, LS		;NUMBER NOW IN CORRECT FL. FORMAT
	MOVSI	A, 567377	;SET UP -401.0 IN A
	FADM	A, LS		;SUBTRACT 401 FROM EXP.*2
	ASH	B, -10		;SHIFT FRACTION FOR FLOATING
	TLC	B, 200000	;FLOAT THE FRACTION PART
	FAD	B, L1		;B = B-SQRT(2.0)/2.0
	MOVE	A, B		;PUT RESULTS IN A
	FAD	A, L2		;A = A+SQRT(2.0)
	FDV	B, A		;B = B/A
	MOVEM	B, LZ		;STORE NEW VARIABLE IN LZ
	FMP	B, B		;CALCULATE Z^2
	MOVE	A, L3		;PICK UP FIRST CONSTANT
	FMP	A, B		;MULTIPLY BY Z^2
	FAD	A, L4		;ADD IN NEXT CONSTANT
	FMP	A, B		;MULTIPLY BY Z^2
	FAD	A, L5		;ADD IN NEXT CONSTANT
	FMP	A, LZ		;MULTIPLY BY Z
	FAD	A, LS		;ADD IN EXPONENT TO FORM LOG2(X)
	FMP	A, L7		;MULTIPLY TO FORM LOGE(X)
	JRA	16,1(16)	;EXIT
LZERO:	MOVEI	A,3		;SET UP AC 0 FOR TYPER.
	PUSHJ	17,TYPER.	;GO TO TYPER.
	MOVE	A,MIFI		;PICK UP MINUS INFINITY
	JRA	Q, 1(Q)		;EXIT
ZERANS:	MOVEI	A, 0		;MAKE ANSWER ZERO
	JRA	16,1(16)	;EXIT

;CONSTANTS

ONE:	201400000000
L1:	577225754146		;-0.707106781187
L2:	201552023632		;1.414213562374
L3:	200462532521		;0.5989786496
L4:	200754213604		;0.9614706323
L5:	202561251002		;2.8853912903
L7:	200542710300		;0.69314718056
MIFI:	400000000001		;LARGEST NEGATIVE FLOATING NUMBER

LS:	0
LZ:	0

	END

