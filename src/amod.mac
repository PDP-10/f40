	TITLE	AMOD	V.027
	SUBTTL	17-JUL-70	ED YOURDON/KK/DMN
;FROM	V.020	19-MAY-69

;FLOATING POINT SINGLE PRECISION MOD FUNCTION
;MODF(A,B) = A-[A/B]*B, WHERE [A/B] IS THE GREATEST INTEGER
;IN THE MAGNITUDE OF A/B.  THE TERM A/B MUST BE LESS THAN 
;2**26 IN MAGNITUDE.

;THE ROUTINE IS CALLED IN THE FOLLOWING MANNER:
;	JSA	Q,AMOD
;	EXP	A
;	EXP	B

	ENTRY	AMOD

A=0
B=1
C=2
Q=16

	EXTERN	OVPCWD, TYPER.
	SIXBIT	/AMOD/
AMOD:	0			;ENTRY TO AMOD ROUTINE.
	MOVEM	C,SAVEC		;SAVE AC 2.
	MOVE	A,@(Q)		;PICK UP FIRST ARG.
	MOVE	B,@1(Q)		;PICK UP SECOND ARG.
	MOVM	C,B		;GET ABSF(B) IN C.
	FDVM	A,B		;CALCULATE A/B.
	JFCL	DETRMN		;IF OVER/UNDER FLOW, GO TO DETRMN VIA OVTRAP.
	MOVMS	B		;CALC. ABSF(A/B).
	CAML	B,MOD1		;IF A/B GE 2**26, 
	JRST	TOOLRG		;GO TO ERROR RETURN.
	FAD	B,MOD1		;OTHERWISE, TRUNCATE TO
	FSB	B,MOD1		;INTEGER.
	FMP	C,B		;C=B**ABSF([A/B])
	SKIPGE	A		;RESTORE
	MOVNS	C		;THE SIGN.
	FSB	A,C		;CALC. A-[A/B]*B.
OUT:	MOVE	C,SAVEC		;RESTORE AC 2.
	JRA	Q,2(Q)		;EXIT.
DETRMN:	MOVE	B,OVPCWD	;PICK UP FLAGS.
	TLNE	B,000100	;IF OVERFLOW, GO TO TOOLRG.
	JRST	OUT		;UNDERFLOW, A IS RESULT.
TOOLRG:	MOVEI	A,3		;SET UP AC 0 FOR TYPER.
	PUSHJ	17,TYPER.	;GO TO TYPER. FOR ERROR MESSAGE.
	SETZ	A,		;ZERO A.
	JRST	OUT		;GO TO EXIT.
SAVEC:	0
MOD1:	233400000000		;2**26.
	END

