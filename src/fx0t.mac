	SUBTTL	FX0 V.24	2-JUL-71

;COPYRIGHT 1971 DIGITAL EQUIPEMENT CORP., MAYNARD, MASS.
	FILE0=	0		;DEFINE FOR CONDITIONALS
	ERRCO=	0		;DEFINE FOR SHORT ERROR MESSAGES	;"23O"

IFDEF	DEBUG,
<
	INTERNAL	DEBSW
DEBSW:	0
DEBSW1:	0
DEBSW2:	0
DEBSW3:	0
DEBSW4:	EXP	0,0,0,0
DEBSW5:	0

	INTERNAL	PATCH
PATCH:	BLOCK	20
>

IFNDEF	WORLEN,	<WORLEN=	60>

CRDCNT:	EXP	NCC0

	OPDEF	RESET	[CALLI	 0]
	OPDEF	DEVCHR	[CALLI	 4]
	OPDEF	EXIT	[CALLI	12]
	OPDEF	DDTOUT	[CALLI	 3]

;			FEATURE FLUSHING SWITCHES

HALFWD=	0

$CCONS=	0
$FAD=	0
$IMPL=	0
$DATA=	0
$CODE=	0
$NAME=	0
$CREF=	0

	EXTERNAL	JOBFF,	JOBREL
	TTYBIT=	000010

	LSTFLG=	001_9
	BINFLG=	002_9
	TTYFLG=	200_9!LSTFLG
	MOTFLG=	TTYFLG

	CTL=	0
	SRC=	1
	BIN=	2
	LST=	3

IFNDEF	PAGSIZ,	<PAGSIZ=	^D53>
	MLON	;ALLOW MULTI - LINE LITERALS
F4EXEC:	RESET
	MOVE	%17,PDPSET
	MOVSI	%16,BINFLG!LSTFLG
	MOVE	%02,ZERCOR
	BLT	%02,CARBUF

CTLSET:	INIT	CTL,1
	SIXBIT	/TTY/
	XWD	TTOBUF,CMDBUF
	JRST	CTLSET
	INBUF	CTL,1
	OUTBUF	CTL,1
	OUTPUT	CTL,
	MOVEI	%02,"*"
	IDPB	%02,TTOPNT
	OUTPUT	CTL,
	INPUT	CTL,
	HRRZ	%00,JOBFF
	HRRM	%00,JOBFFI
NXTCOM:	HRRZ	%00,JOBFFI
	HRRM	%00,JOBFF

	JFCL	1,.+1			;CLEAR PC CHANGE OR FLOATING OVFLO FLAG
	JRST	.+1			;SET PC CHANGE FLAG ON PDP-6
	JFCL	1,.+2			;TEST PC CHANGE FLAG
	TLOA	%06,-1			;-1 PDP-10
	TDZ	%06,%06			; 0 PDP-6
	HLLEM	%06,PDPSWZ		;STORE MACHINE TYPE

	SETZB	%00,%01
	TLOA	%01,(POINT 6,%00,)
F4EX1:	IDPB	%02,%01
	ILDB	%02,CMDPNT
	CAIN	%02,","
	SETZ	%02,
	SUBI	%02,40
	TLNE	%01,770000
	JUMPG	%02,F4EX1
	MOVEM	%00,XE
	MOVSI	%01,(SIXBIT /F4/)
	MOVEM	%01,XE1
	INIT	SRC,1
	SIXBIT	/SRC/
	XWD	0,SRCBUF
	JRST	[MOVEI	0,[ASCIZ /PLEASE USE BATCH MODE/]
		DDTOUT	0,
		EXIT]

	LOOKUP	SRC,XE
	EXIT
	INBUF	SRC,1

	MOVSI	%01,(SIXBIT /REL/)
	MOVEM	%01,XE1
	INIT	BIN,14
	SIXBIT	/BIN/
	XWD	BINBUF,0
	JRST	GETLST
	OUTBUF	BIN,1
	ENTER	BIN,XE
	EXIT
	TLZ	%16,BINFLG

GETLST:	MOVSI	%01,(SIXBIT /LST/)
	MOVEM	%01,XE1
	INIT	LST,1
	SIXBIT	/LST/
	XWD	LSTBUF,0
	JRST	SETEX
	OUTBUF	LST,1
	ENTER	LST,XE
	EXIT
	TLZ	%16,LSTFLG
	DEVCHR	%01,
	TLNE	%01,TTYBIT
	TLO	%16,TTYFLG-LSTFLG
	PUSHJ	%17,HDRSET
SETEX:	MOVE	%04,[XWD -EXLEN0,XITROL]
	MOVE	%00,ZERCOR
	BLT	%00,EROADR
	PUSHJ	%17,NCDML
	HRRZ	%00,JOBREL
	HRL	%00,JOBFF
	PUSHJ	%17,F4
SETEX1:	CLOSE	LST,
	CLOSE	BIN,
	LDB	%02,CMDPNT
	CAIN	%02,","
	JRST	NXTCOM
	JRST	F4EXEC
CHARB:	MOVEM	%14, @SEQPNT	;SAVE SEQUENCE NUMBER
	AOS	SRCPNT		;INCREMENT POINTER PAST WORD
	MOVNI	%14, 5		;GET -5
	ADDM	%14, SRCCNT	;SUBTRACT 5 FROM WORD COUNT
CHAR:	SOSG	SRCCNT		;DECREMENT ITEM COUNT
	PUSHJ	%17, CHAR4	;GET ANOTHER BUFFER IF NECESSARY
	IBP	SRCPNT		;INCREMENT THE BYTE POINTER
	MOVE	%14, @SRCPNT	;PICK UP AN ENTIRE WORD FROM BUFFER
	TRZE	%14, 1		;IS THE SEQUENCE NUMBER BIT ON?
	JRST	CHARB		;YES, SKIP AROUND IT
	LDB	%14, SRCPNT	;NO, PICK UP A GOOD CHARACTER
	JUMPE	%14, CHAR		;FILETER OUT NULLS
	CAIL	%14," "		;IF LESS THAN SPACE
	CAILE	%14,"Z"		;OR GREATER THAN Z
	JRST	CHAR3		;DO SOME MORE EDITING
CHAR1:	HRRZ	%14,CSTATI(%14)	;OK, CONVERT TO SIXBIT
	POPJ	%17,		;EXIT

CHAR3:	CAIL	%14,11		;IF LESS THAN TAB
	CAILE	%14,15		;OR GREATER THAN CARRIAGE RETURN
	SKIPA	%14,CHTAB+2	;FORCE ERROR
	XCT	CHTAB-11(%14)	;EXECUTE TABLE
	JRST	CHAR1		;SET TO SIXBIT AND EXIT

CHTAB:	MOVEI	%14,"["		;TAB
	MOVEI	%14,"_"		;LINE FEED
	MOVEI	%14,"^"		;ERROR
	JRST	CHAR		;FORM FEED
	JRST	CHAR		;CARRIAGE RETURN

CHAR4:	INPUT	SRC,		;CALL MONITIOR FOR A BUFFER
	STATO	SRC, 020000
	POPJ	%17,
	POP	%17,%14
	SETOM	@SEQPNT
	MOVEI	%14,CRR
	POPJ	%17,
BINOUT:	SOSG	BINCNT
	OUTPUT	BIN,
	IDPB	%00,BINPNT
	POPJ	%17,

TTYOUT:	MOVEI	%02,"?"
	SOS	TTOPNT+1
	IDPB	%02,TTOPNT
	MOVEI	%02,"E"
	IDPB	%02,TTOPNT
	OUTPUT	CTL,
	OUTPUT	CTL,
	JRST	SETEX1

ERROUT:	TLNE	%16,LSTFLG
	JRST	TTYOUT

LSTOUT:	ADDI	%02,40
	CAIN	%02,"["
LSTTAB:	MOVEI	%02,11
	CAIE	%02,"_"
	JRST	LSTDMP
LSTCR:	MOVEI	%02,15
	PUSHJ	%17,LSTDMP
	MOVEI	%02,12
	PUSHJ	%17,LSTDMP
	TLNE	%16,TTYFLG-LSTFLG
	OUTPUT	LST,
	SOSLE	LINCNT
HDRFF:	POPJ	%17,14
HDRSET:	MOVEI	%02,PAGSIZ
	MOVEM	%02,LINCNT
	SKIPA	%02,HDRFF

LSTDMP:	SOSG	LSTBUF+2
	OUTPUT	LST,
	IDPB	%02,LSTBUF+1
	POPJ	%17,
;....EOF0

